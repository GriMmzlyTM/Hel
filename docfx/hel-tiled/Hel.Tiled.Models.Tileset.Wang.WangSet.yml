### YamlMime:ManagedReference
items:
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet
  commentId: T:Hel.Tiled.Models.Tileset.Wang.WangSet
  id: WangSet
  parent: Hel.Tiled.Models.Tileset.Wang
  children:
  - Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors
  - Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors
  - Hel.Tiled.Models.Tileset.Wang.WangSet.Name
  - Hel.Tiled.Models.Tileset.Wang.WangSet.Properties
  - Hel.Tiled.Models.Tileset.Wang.WangSet.Tile
  - Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles
  langs:
  - csharp
  - vb
  name: WangSet
  nameWithType: WangSet
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet
  type: Class
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: WangSet
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 4
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  syntax:
    content: public class WangSet
    content.vb: Public Class WangSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors
  id: CornerColors
  parent: Hel.Tiled.Models.Tileset.Wang.WangSet
  langs:
  - csharp
  - vb
  name: CornerColors
  nameWithType: WangSet.CornerColors
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: CornerColors
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 9
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nList of colors that can be used to define the corner of a Wang tile.\n"
  example: []
  syntax:
    content: public List<WangColor> CornerColors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangColor}
    content.vb: Public Property CornerColors As List(Of WangColor)
  overload: Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors
  id: EdgeColors
  parent: Hel.Tiled.Models.Tileset.Wang.WangSet
  langs:
  - csharp
  - vb
  name: EdgeColors
  nameWithType: WangSet.EdgeColors
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: EdgeColors
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 14
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nList of colors that can be used to define the edge of a Wang tile.\n"
  example: []
  syntax:
    content: public List<WangColor> EdgeColors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangColor}
    content.vb: Public Property EdgeColors As List(Of WangColor)
  overload: Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.Name
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangSet.Name
  id: Name
  parent: Hel.Tiled.Models.Tileset.Wang.WangSet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WangSet.Name
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.Name
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Name
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 19
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nName of the Wang set\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Hel.Tiled.Models.Tileset.Wang.WangSet.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.Properties
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangSet.Properties
  id: Properties
  parent: Hel.Tiled.Models.Tileset.Wang.WangSet
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: WangSet.Properties
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.Properties
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Properties
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 24
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nArray of custom properties\n"
  example: []
  syntax:
    content: public List<Property> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Hel.Tiled.Models.Property}
    content.vb: Public Property Properties As List(Of  Property)
  overload: Hel.Tiled.Models.Tileset.Wang.WangSet.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.Tile
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangSet.Tile
  id: Tile
  parent: Hel.Tiled.Models.Tileset.Wang.WangSet
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: WangSet.Tile
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.Tile
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Tile
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 29
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nLocal ID of tile representing the Wang set\n"
  example: []
  syntax:
    content: public int Tile { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Tile As Integer
  overload: Hel.Tiled.Models.Tileset.Wang.WangSet.Tile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles
  id: WangTiles
  parent: Hel.Tiled.Models.Tileset.Wang.WangSet
  langs:
  - csharp
  - vb
  name: WangTiles
  nameWithType: WangSet.WangTiles
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangSet.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: WangTiles
    path: ../Hel.Tiled/Models/Tileset/Wang/WangSet.cs
    startLine: 34
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nDefines a Wang tile, by referring to a tile in the tileset and associating it with a certain Wang ID.\n"
  example: []
  syntax:
    content: public List<WangTile> WangTiles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangTile}
    content.vb: Public Property WangTiles As List(Of WangTile)
  overload: Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Hel.Tiled.Models.Tileset.Wang
  commentId: N:Hel.Tiled.Models.Tileset.Wang
  name: Hel.Tiled.Models.Tileset.Wang
  nameWithType: Hel.Tiled.Models.Tileset.Wang
  fullName: Hel.Tiled.Models.Tileset.Wang
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors
  name: CornerColors
  nameWithType: WangSet.CornerColors
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.CornerColors
- uid: System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangColor}
  commentId: T:System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangColor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<WangColor>
  nameWithType: List<WangColor>
  fullName: System.Collections.Generic.List<Hel.Tiled.Models.Tileset.Wang.WangColor>
  nameWithType.vb: List(Of WangColor)
  fullName.vb: System.Collections.Generic.List(Of Hel.Tiled.Models.Tileset.Wang.WangColor)
  name.vb: List(Of WangColor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Tileset.Wang.WangColor
    name: WangColor
    nameWithType: WangColor
    fullName: Hel.Tiled.Models.Tileset.Wang.WangColor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Tileset.Wang.WangColor
    name: WangColor
    nameWithType: WangColor
    fullName: Hel.Tiled.Models.Tileset.Wang.WangColor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors
  name: EdgeColors
  nameWithType: WangSet.EdgeColors
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.EdgeColors
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.Name*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangSet.Name
  name: Name
  nameWithType: WangSet.Name
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.Properties*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangSet.Properties
  name: Properties
  nameWithType: WangSet.Properties
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.Properties
- uid: System.Collections.Generic.List{Hel.Tiled.Models.Property}
  commentId: T:System.Collections.Generic.List{Hel.Tiled.Models.Property}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Property>
  nameWithType: List<Property>
  fullName: System.Collections.Generic.List<Hel.Tiled.Models.Property>
  nameWithType.vb: List(Of Property)
  fullName.vb: System.Collections.Generic.List(Of Hel.Tiled.Models.Property)
  name.vb: List(Of Property)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Property
    name: Property
    nameWithType: Property
    fullName: Hel.Tiled.Models.Property
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Property
    name: Property
    nameWithType: Property
    fullName: Hel.Tiled.Models.Property
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.Tile*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangSet.Tile
  name: Tile
  nameWithType: WangSet.Tile
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.Tile
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles
  name: WangTiles
  nameWithType: WangSet.WangTiles
  fullName: Hel.Tiled.Models.Tileset.Wang.WangSet.WangTiles
- uid: System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangTile}
  commentId: T:System.Collections.Generic.List{Hel.Tiled.Models.Tileset.Wang.WangTile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<WangTile>
  nameWithType: List<WangTile>
  fullName: System.Collections.Generic.List<Hel.Tiled.Models.Tileset.Wang.WangTile>
  nameWithType.vb: List(Of WangTile)
  fullName.vb: System.Collections.Generic.List(Of Hel.Tiled.Models.Tileset.Wang.WangTile)
  name.vb: List(Of WangTile)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Tileset.Wang.WangTile
    name: WangTile
    nameWithType: WangTile
    fullName: Hel.Tiled.Models.Tileset.Wang.WangTile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Tileset.Wang.WangTile
    name: WangTile
    nameWithType: WangTile
    fullName: Hel.Tiled.Models.Tileset.Wang.WangTile
  - name: )
    nameWithType: )
    fullName: )
