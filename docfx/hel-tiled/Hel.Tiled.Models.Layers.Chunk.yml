### YamlMime:ManagedReference
items:
- uid: Hel.Tiled.Models.Layers.Chunk
  commentId: T:Hel.Tiled.Models.Layers.Chunk
  id: Chunk
  parent: Hel.Tiled.Models.Layers
  children:
  - Hel.Tiled.Models.Layers.Chunk.Data
  - Hel.Tiled.Models.Layers.Chunk.Height
  - Hel.Tiled.Models.Layers.Chunk.Width
  - Hel.Tiled.Models.Layers.Chunk.X
  - Hel.Tiled.Models.Layers.Chunk.Y
  langs:
  - csharp
  - vb
  name: Chunk
  nameWithType: Chunk
  fullName: Hel.Tiled.Models.Layers.Chunk
  type: Class
  source:
    remote:
      path: Hel.Tiled/Models/Layers/Chunk.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Chunk
    path: ../Hel.Tiled/Models/Layers/Chunk.cs
    startLine: 2
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Layers
  syntax:
    content: public class Chunk
    content.vb: Public Class Chunk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Tiled.Models.Layers.Chunk.Data
  commentId: P:Hel.Tiled.Models.Layers.Chunk.Data
  id: Data
  parent: Hel.Tiled.Models.Layers.Chunk
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Chunk.Data
  fullName: Hel.Tiled.Models.Layers.Chunk.Data
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Layers/Chunk.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Data
    path: ../Hel.Tiled/Models/Layers/Chunk.cs
    startLine: 7
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Layers
  summary: "\nArray of unsigned int GIDs\n"
  example: []
  syntax:
    content: public string[] Data { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Data As String()
  overload: Hel.Tiled.Models.Layers.Chunk.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Layers.Chunk.Height
  commentId: P:Hel.Tiled.Models.Layers.Chunk.Height
  id: Height
  parent: Hel.Tiled.Models.Layers.Chunk
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Chunk.Height
  fullName: Hel.Tiled.Models.Layers.Chunk.Height
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Layers/Chunk.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Height
    path: ../Hel.Tiled/Models/Layers/Chunk.cs
    startLine: 12
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Layers
  summary: "\nHeight in tiles\n"
  example: []
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: Hel.Tiled.Models.Layers.Chunk.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Layers.Chunk.Width
  commentId: P:Hel.Tiled.Models.Layers.Chunk.Width
  id: Width
  parent: Hel.Tiled.Models.Layers.Chunk
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Chunk.Width
  fullName: Hel.Tiled.Models.Layers.Chunk.Width
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Layers/Chunk.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Width
    path: ../Hel.Tiled/Models/Layers/Chunk.cs
    startLine: 17
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Layers
  summary: "\nWidth in tiles\n"
  example: []
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: Hel.Tiled.Models.Layers.Chunk.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Layers.Chunk.X
  commentId: P:Hel.Tiled.Models.Layers.Chunk.X
  id: X
  parent: Hel.Tiled.Models.Layers.Chunk
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Chunk.X
  fullName: Hel.Tiled.Models.Layers.Chunk.X
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Layers/Chunk.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: X
    path: ../Hel.Tiled/Models/Layers/Chunk.cs
    startLine: 22
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Layers
  summary: "\nX coordinate in tiles\n"
  example: []
  syntax:
    content: public int X { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property X As Integer
  overload: Hel.Tiled.Models.Layers.Chunk.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Layers.Chunk.Y
  commentId: P:Hel.Tiled.Models.Layers.Chunk.Y
  id: Y
  parent: Hel.Tiled.Models.Layers.Chunk
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Chunk.Y
  fullName: Hel.Tiled.Models.Layers.Chunk.Y
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Layers/Chunk.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Y
    path: ../Hel.Tiled/Models/Layers/Chunk.cs
    startLine: 27
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Layers
  summary: "\nY coordinate in tiles\n"
  example: []
  syntax:
    content: public int Y { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Y As Integer
  overload: Hel.Tiled.Models.Layers.Chunk.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Hel.Tiled.Models.Layers
  commentId: N:Hel.Tiled.Models.Layers
  name: Hel.Tiled.Models.Layers
  nameWithType: Hel.Tiled.Models.Layers
  fullName: Hel.Tiled.Models.Layers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Tiled.Models.Layers.Chunk.Data*
  commentId: Overload:Hel.Tiled.Models.Layers.Chunk.Data
  name: Data
  nameWithType: Chunk.Data
  fullName: Hel.Tiled.Models.Layers.Chunk.Data
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hel.Tiled.Models.Layers.Chunk.Height*
  commentId: Overload:Hel.Tiled.Models.Layers.Chunk.Height
  name: Height
  nameWithType: Chunk.Height
  fullName: Hel.Tiled.Models.Layers.Chunk.Height
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Hel.Tiled.Models.Layers.Chunk.Width*
  commentId: Overload:Hel.Tiled.Models.Layers.Chunk.Width
  name: Width
  nameWithType: Chunk.Width
  fullName: Hel.Tiled.Models.Layers.Chunk.Width
- uid: Hel.Tiled.Models.Layers.Chunk.X*
  commentId: Overload:Hel.Tiled.Models.Layers.Chunk.X
  name: X
  nameWithType: Chunk.X
  fullName: Hel.Tiled.Models.Layers.Chunk.X
- uid: Hel.Tiled.Models.Layers.Chunk.Y*
  commentId: Overload:Hel.Tiled.Models.Layers.Chunk.Y
  name: Y
  nameWithType: Chunk.Y
  fullName: Hel.Tiled.Models.Layers.Chunk.Y
