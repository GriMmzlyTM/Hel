### YamlMime:ManagedReference
items:
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor
  commentId: T:Hel.Tiled.Models.Tileset.Wang.WangColor
  id: WangColor
  parent: Hel.Tiled.Models.Tileset.Wang
  children:
  - Hel.Tiled.Models.Tileset.Wang.WangColor.Color
  - Hel.Tiled.Models.Tileset.Wang.WangColor.Name
  - Hel.Tiled.Models.Tileset.Wang.WangColor.Probability
  - Hel.Tiled.Models.Tileset.Wang.WangColor.Tile
  langs:
  - csharp
  - vb
  name: WangColor
  nameWithType: WangColor
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor
  type: Class
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangColor.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: WangColor
    path: ../Hel.Tiled/Models/Tileset/Wang/WangColor.cs
    startLine: 2
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  syntax:
    content: public class WangColor
    content.vb: Public Class WangColor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Color
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangColor.Color
  id: Color
  parent: Hel.Tiled.Models.Tileset.Wang.WangColor
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: WangColor.Color
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Color
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangColor.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Color
    path: ../Hel.Tiled/Models/Tileset/Wang/WangColor.cs
    startLine: 7
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nHex-formatted color (#RRGGBB or #AARRGGBB)\n"
  example: []
  syntax:
    content: public string Color { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Color As String
  overload: Hel.Tiled.Models.Tileset.Wang.WangColor.Color*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Name
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangColor.Name
  id: Name
  parent: Hel.Tiled.Models.Tileset.Wang.WangColor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WangColor.Name
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Name
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangColor.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Name
    path: ../Hel.Tiled/Models/Tileset/Wang/WangColor.cs
    startLine: 12
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nName of the Wang color\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Hel.Tiled.Models.Tileset.Wang.WangColor.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Probability
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangColor.Probability
  id: Probability
  parent: Hel.Tiled.Models.Tileset.Wang.WangColor
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: WangColor.Probability
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Probability
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangColor.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Probability
    path: ../Hel.Tiled/Models/Tileset/Wang/WangColor.cs
    startLine: 17
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nProbability used when randomizing\n"
  example: []
  syntax:
    content: public double Probability { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Probability As Double
  overload: Hel.Tiled.Models.Tileset.Wang.WangColor.Probability*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Tile
  commentId: P:Hel.Tiled.Models.Tileset.Wang.WangColor.Tile
  id: Tile
  parent: Hel.Tiled.Models.Tileset.Wang.WangColor
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: WangColor.Tile
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Tile
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Wang/WangColor.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Tile
    path: ../Hel.Tiled/Models/Tileset/Wang/WangColor.cs
    startLine: 22
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Wang
  summary: "\nLocal ID of tile representing the Wang color\n"
  example: []
  syntax:
    content: public int Tile { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Tile As Integer
  overload: Hel.Tiled.Models.Tileset.Wang.WangColor.Tile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Hel.Tiled.Models.Tileset.Wang
  commentId: N:Hel.Tiled.Models.Tileset.Wang
  name: Hel.Tiled.Models.Tileset.Wang
  nameWithType: Hel.Tiled.Models.Tileset.Wang
  fullName: Hel.Tiled.Models.Tileset.Wang
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Color*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangColor.Color
  name: Color
  nameWithType: WangColor.Color
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Color
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Name*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangColor.Name
  name: Name
  nameWithType: WangColor.Name
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Name
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Probability*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangColor.Probability
  name: Probability
  nameWithType: WangColor.Probability
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Probability
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Hel.Tiled.Models.Tileset.Wang.WangColor.Tile*
  commentId: Overload:Hel.Tiled.Models.Tileset.Wang.WangColor.Tile
  name: Tile
  nameWithType: WangColor.Tile
  fullName: Hel.Tiled.Models.Tileset.Wang.WangColor.Tile
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
