### YamlMime:ManagedReference
items:
- uid: Hel.Engine.Commander.ExitCommand
  commentId: T:Hel.Engine.Commander.ExitCommand
  id: ExitCommand
  parent: Hel.Engine.Commander
  children:
  - Hel.Engine.Commander.ExitCommand.Execute
  - Hel.Engine.Commander.ExitCommand.Undo
  langs:
  - csharp
  - vb
  name: ExitCommand
  nameWithType: ExitCommand
  fullName: Hel.Engine.Commander.ExitCommand
  type: Class
  source:
    remote:
      path: Hel.Engine/Commander/ExitCommand.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: ExitCommand
    path: ../Hel.Engine/Commander/ExitCommand.cs
    startLine: 5
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Commander
  syntax:
    content: >-
      [Serializable]

      public class ExitCommand : ICommand
    content.vb: >-
      <Serializable>

      Public Class ExitCommand
          Implements ICommand
  inheritance:
  - System.Object
  implements:
  - Hel.Engine.Commander.Model.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.Commander.ExitCommand.Execute
  commentId: M:Hel.Engine.Commander.ExitCommand.Execute
  id: Execute
  parent: Hel.Engine.Commander.ExitCommand
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: ExitCommand.Execute()
  fullName: Hel.Engine.Commander.ExitCommand.Execute()
  type: Method
  source:
    remote:
      path: Hel.Engine/Commander/ExitCommand.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Execute
    path: ../Hel.Engine/Commander/ExitCommand.cs
    startLine: 8
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Commander
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute
  overload: Hel.Engine.Commander.ExitCommand.Execute*
  implements:
  - Hel.Engine.Commander.Model.ICommand.Execute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.Commander.ExitCommand.Undo
  commentId: M:Hel.Engine.Commander.ExitCommand.Undo
  id: Undo
  parent: Hel.Engine.Commander.ExitCommand
  langs:
  - csharp
  - vb
  name: Undo()
  nameWithType: ExitCommand.Undo()
  fullName: Hel.Engine.Commander.ExitCommand.Undo()
  type: Method
  source:
    remote:
      path: Hel.Engine/Commander/ExitCommand.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Undo
    path: ../Hel.Engine/Commander/ExitCommand.cs
    startLine: 13
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Commander
  syntax:
    content: public void Undo()
    content.vb: Public Sub Undo
  overload: Hel.Engine.Commander.ExitCommand.Undo*
  implements:
  - Hel.Engine.Commander.Model.ICommand.Undo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Hel.Engine.Commander
  commentId: N:Hel.Engine.Commander
  name: Hel.Engine.Commander
  nameWithType: Hel.Engine.Commander
  fullName: Hel.Engine.Commander
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Engine.Commander.Model.ICommand
  commentId: T:Hel.Engine.Commander.Model.ICommand
  parent: Hel.Engine.Commander.Model
  name: ICommand
  nameWithType: ICommand
  fullName: Hel.Engine.Commander.Model.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Engine.Commander.Model
  commentId: N:Hel.Engine.Commander.Model
  name: Hel.Engine.Commander.Model
  nameWithType: Hel.Engine.Commander.Model
  fullName: Hel.Engine.Commander.Model
- uid: Hel.Engine.Commander.ExitCommand.Execute*
  commentId: Overload:Hel.Engine.Commander.ExitCommand.Execute
  name: Execute
  nameWithType: ExitCommand.Execute
  fullName: Hel.Engine.Commander.ExitCommand.Execute
- uid: Hel.Engine.Commander.Model.ICommand.Execute
  commentId: M:Hel.Engine.Commander.Model.ICommand.Execute
  parent: Hel.Engine.Commander.Model.ICommand
  name: Execute()
  nameWithType: ICommand.Execute()
  fullName: Hel.Engine.Commander.Model.ICommand.Execute()
  spec.csharp:
  - uid: Hel.Engine.Commander.Model.ICommand.Execute
    name: Execute
    nameWithType: ICommand.Execute
    fullName: Hel.Engine.Commander.Model.ICommand.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.Commander.Model.ICommand.Execute
    name: Execute
    nameWithType: ICommand.Execute
    fullName: Hel.Engine.Commander.Model.ICommand.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Commander.ExitCommand.Undo*
  commentId: Overload:Hel.Engine.Commander.ExitCommand.Undo
  name: Undo
  nameWithType: ExitCommand.Undo
  fullName: Hel.Engine.Commander.ExitCommand.Undo
- uid: Hel.Engine.Commander.Model.ICommand.Undo
  commentId: M:Hel.Engine.Commander.Model.ICommand.Undo
  parent: Hel.Engine.Commander.Model.ICommand
  name: Undo()
  nameWithType: ICommand.Undo()
  fullName: Hel.Engine.Commander.Model.ICommand.Undo()
  spec.csharp:
  - uid: Hel.Engine.Commander.Model.ICommand.Undo
    name: Undo
    nameWithType: ICommand.Undo
    fullName: Hel.Engine.Commander.Model.ICommand.Undo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.Commander.Model.ICommand.Undo
    name: Undo
    nameWithType: ICommand.Undo
    fullName: Hel.Engine.Commander.Model.ICommand.Undo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
