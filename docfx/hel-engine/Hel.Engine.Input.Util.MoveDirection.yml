### YamlMime:ManagedReference
items:
- uid: Hel.Engine.Input.Util.MoveDirection
  commentId: T:Hel.Engine.Input.Util.MoveDirection
  id: MoveDirection
  parent: Hel.Engine.Input.Util
  children:
  - Hel.Engine.Input.Util.MoveDirection.KeyboardDirection(Hel.Engine.Input.Model.DirectionalKeys)
  - Hel.Engine.Input.Util.MoveDirection.KeyState
  - Hel.Engine.Input.Util.MoveDirection.LastKeyState
  langs:
  - csharp
  - vb
  name: MoveDirection
  nameWithType: MoveDirection
  fullName: Hel.Engine.Input.Util.MoveDirection
  type: Class
  source:
    remote:
      path: Hel.Engine/Input/Util/MoveDirection.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: MoveDirection
    path: ../Hel.Engine/Input/Util/MoveDirection.cs
    startLine: 9
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Util
  syntax:
    content: public static class MoveDirection
    content.vb: Public Module MoveDirection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hel.Engine.Input.Util.MoveDirection.KeyState
  commentId: P:Hel.Engine.Input.Util.MoveDirection.KeyState
  id: KeyState
  parent: Hel.Engine.Input.Util.MoveDirection
  langs:
  - csharp
  - vb
  name: KeyState
  nameWithType: MoveDirection.KeyState
  fullName: Hel.Engine.Input.Util.MoveDirection.KeyState
  type: Property
  source:
    remote:
      path: Hel.Engine/Input/Util/MoveDirection.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: KeyState
    path: ../Hel.Engine/Input/Util/MoveDirection.cs
    startLine: 11
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Util
  syntax:
    content: public static KeyboardState KeyState { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.KeyboardState
    content.vb: Public Shared ReadOnly Property KeyState As KeyboardState
  overload: Hel.Engine.Input.Util.MoveDirection.KeyState*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Hel.Engine.Input.Util.MoveDirection.LastKeyState
  commentId: P:Hel.Engine.Input.Util.MoveDirection.LastKeyState
  id: LastKeyState
  parent: Hel.Engine.Input.Util.MoveDirection
  langs:
  - csharp
  - vb
  name: LastKeyState
  nameWithType: MoveDirection.LastKeyState
  fullName: Hel.Engine.Input.Util.MoveDirection.LastKeyState
  type: Property
  source:
    remote:
      path: Hel.Engine/Input/Util/MoveDirection.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: LastKeyState
    path: ../Hel.Engine/Input/Util/MoveDirection.cs
    startLine: 12
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Util
  syntax:
    content: public static KeyboardState LastKeyState { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.KeyboardState
    content.vb: Public Shared ReadOnly Property LastKeyState As KeyboardState
  overload: Hel.Engine.Input.Util.MoveDirection.LastKeyState*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Hel.Engine.Input.Util.MoveDirection.KeyboardDirection(Hel.Engine.Input.Model.DirectionalKeys)
  commentId: M:Hel.Engine.Input.Util.MoveDirection.KeyboardDirection(Hel.Engine.Input.Model.DirectionalKeys)
  id: KeyboardDirection(Hel.Engine.Input.Model.DirectionalKeys)
  parent: Hel.Engine.Input.Util.MoveDirection
  langs:
  - csharp
  - vb
  name: KeyboardDirection(DirectionalKeys)
  nameWithType: MoveDirection.KeyboardDirection(DirectionalKeys)
  fullName: Hel.Engine.Input.Util.MoveDirection.KeyboardDirection(Hel.Engine.Input.Model.DirectionalKeys)
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Util/MoveDirection.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: KeyboardDirection
    path: ../Hel.Engine/Input/Util/MoveDirection.cs
    startLine: 19
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Util
  summary: "\nKeyboardDirection takes the current keyboard state, and calculates the required direction accordingly. \n"
  example: []
  syntax:
    content: public static Vector2 KeyboardDirection(DirectionalKeys directionalKeys)
    parameters:
    - id: directionalKeys
      type: Hel.Engine.Input.Model.DirectionalKeys
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: Direction to move based on keyboard input.
    content.vb: Public Shared Function KeyboardDirection(directionalKeys As DirectionalKeys) As Vector2
  overload: Hel.Engine.Input.Util.MoveDirection.KeyboardDirection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hel.Engine.Input.Util
  commentId: N:Hel.Engine.Input.Util
  name: Hel.Engine.Input.Util
  nameWithType: Hel.Engine.Input.Util
  fullName: Hel.Engine.Input.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Engine.Input.Util.MoveDirection.KeyState*
  commentId: Overload:Hel.Engine.Input.Util.MoveDirection.KeyState
  name: KeyState
  nameWithType: MoveDirection.KeyState
  fullName: Hel.Engine.Input.Util.MoveDirection.KeyState
- uid: Microsoft.Xna.Framework.Input.KeyboardState
  commentId: T:Microsoft.Xna.Framework.Input.KeyboardState
  parent: Microsoft.Xna.Framework.Input
  isExternal: true
  name: KeyboardState
  nameWithType: KeyboardState
  fullName: Microsoft.Xna.Framework.Input.KeyboardState
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: true
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
- uid: Hel.Engine.Input.Util.MoveDirection.LastKeyState*
  commentId: Overload:Hel.Engine.Input.Util.MoveDirection.LastKeyState
  name: LastKeyState
  nameWithType: MoveDirection.LastKeyState
  fullName: Hel.Engine.Input.Util.MoveDirection.LastKeyState
- uid: Hel.Engine.Input.Util.MoveDirection.KeyboardDirection*
  commentId: Overload:Hel.Engine.Input.Util.MoveDirection.KeyboardDirection
  name: KeyboardDirection
  nameWithType: MoveDirection.KeyboardDirection
  fullName: Hel.Engine.Input.Util.MoveDirection.KeyboardDirection
- uid: Hel.Engine.Input.Model.DirectionalKeys
  commentId: T:Hel.Engine.Input.Model.DirectionalKeys
  parent: Hel.Engine.Input.Model
  name: DirectionalKeys
  nameWithType: DirectionalKeys
  fullName: Hel.Engine.Input.Model.DirectionalKeys
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Hel.Engine.Input.Model
  commentId: N:Hel.Engine.Input.Model
  name: Hel.Engine.Input.Model
  nameWithType: Hel.Engine.Input.Model
  fullName: Hel.Engine.Input.Model
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
