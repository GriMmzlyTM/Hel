### YamlMime:ManagedReference
items:
- uid: Hel.Engine.ECS.Entities.EntityManager
  commentId: T:Hel.Engine.ECS.Entities.EntityManager
  id: EntityManager
  parent: Hel.Engine.ECS.Entities
  children:
  - Hel.Engine.ECS.Entities.EntityManager.#ctor(Hel.Engine.ECS.World)
  - Hel.Engine.ECS.Entities.EntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  - Hel.Engine.ECS.Entities.EntityManager.ClearEntities
  - Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType``1
  - Hel.Engine.ECS.Entities.EntityManager.CreateEntity(System.String)
  - Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply(System.String)
  - Hel.Engine.ECS.Entities.EntityManager.GetEntities(System.UInt32)
  - Hel.Engine.ECS.Entities.EntityManager.GetEntities``1
  - Hel.Engine.ECS.Entities.EntityManager.LoadJSON(System.Collections.Generic.List{System.String})
  - Hel.Engine.ECS.Entities.EntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  - Hel.Engine.ECS.Entities.EntityManager.RemoveEntity(System.UInt32)
  - Hel.Engine.ECS.Entities.EntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  - Hel.Engine.ECS.Entities.EntityManager.World
  langs:
  - csharp
  - vb
  name: EntityManager
  nameWithType: EntityManager
  fullName: Hel.Engine.ECS.Entities.EntityManager
  type: Class
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: EntityManager
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 60
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: 'public class EntityManager : IEntityManager'
    content.vb: >-
      Public Class EntityManager
          Implements IEntityManager
  inheritance:
  - System.Object
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.ECS.Entities.EntityManager.World
  commentId: P:Hel.Engine.ECS.Entities.EntityManager.World
  id: World
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: World
  nameWithType: EntityManager.World
  fullName: Hel.Engine.ECS.Entities.EntityManager.World
  type: Property
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: World
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 63
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public World World { get; }
    parameters: []
    return:
      type: Hel.Engine.ECS.World
    content.vb: Public ReadOnly Property World As World
  overload: Hel.Engine.ECS.Entities.EntityManager.World*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.World
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hel.Engine.ECS.Entities.EntityManager.#ctor(Hel.Engine.ECS.World)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.#ctor(Hel.Engine.ECS.World)
  id: '#ctor(Hel.Engine.ECS.World)'
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: EntityManager(World)
  nameWithType: EntityManager.EntityManager(World)
  fullName: Hel.Engine.ECS.Entities.EntityManager.EntityManager(Hel.Engine.ECS.World)
  type: Constructor
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: .ctor
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 65
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public EntityManager(World world)
    parameters:
    - id: world
      type: Hel.Engine.ECS.World
    content.vb: Public Sub New(world As World)
  overload: Hel.Engine.ECS.Entities.EntityManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.CreateEntity(System.String)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.CreateEntity(System.String)
  id: CreateEntity(System.String)
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: CreateEntity(String)
  nameWithType: EntityManager.CreateEntity(String)
  fullName: Hel.Engine.ECS.Entities.EntityManager.CreateEntity(System.String)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: CreateEntity
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 67
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public IEntity CreateEntity(string entityName)
    parameters:
    - id: entityName
      type: System.String
    return:
      type: Hel.Engine.ECS.Entities.IEntity
    content.vb: Public Function CreateEntity(entityName As String) As IEntity
  overload: Hel.Engine.ECS.Entities.EntityManager.CreateEntity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.LoadJSON(System.Collections.Generic.List{System.String})
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.LoadJSON(System.Collections.Generic.List{System.String})
  id: LoadJSON(System.Collections.Generic.List{System.String})
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: LoadJSON(List<String>)
  nameWithType: EntityManager.LoadJSON(List<String>)
  fullName: Hel.Engine.ECS.Entities.EntityManager.LoadJSON(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: LoadJSON
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 70
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public void LoadJSON(List<string> jsonFiles)
    parameters:
    - id: jsonFiles
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Sub LoadJSON(jsonFiles As List(Of String))
  overload: Hel.Engine.ECS.Entities.EntityManager.LoadJSON*
  nameWithType.vb: EntityManager.LoadJSON(List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Entities.EntityManager.LoadJSON(System.Collections.Generic.List(Of System.String))
  name.vb: LoadJSON(List(Of String))
- uid: Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply(System.String)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply(System.String)
  id: CreateEntityApply(System.String)
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: CreateEntityApply(String)
  nameWithType: EntityManager.CreateEntityApply(String)
  fullName: Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply(System.String)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: CreateEntityApply
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 73
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public uint CreateEntityApply(string entityName)
    parameters:
    - id: entityName
      type: System.String
    return:
      type: System.UInt32
    content.vb: Public Function CreateEntityApply(entityName As String) As UInteger
  overload: Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  id: AddEntity(Hel.Engine.ECS.Entities.IEntity)
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: AddEntity(IEntity)
  nameWithType: EntityManager.AddEntity(IEntity)
  fullName: Hel.Engine.ECS.Entities.EntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: AddEntity
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 77
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public uint AddEntity(IEntity entity)
    parameters:
    - id: entity
      type: Hel.Engine.ECS.Entities.IEntity
    return:
      type: System.UInt32
    content.vb: Public Function AddEntity(entity As IEntity) As UInteger
  overload: Hel.Engine.ECS.Entities.EntityManager.AddEntity*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.GetEntities``1
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.GetEntities``1
  id: GetEntities``1
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: GetEntities<T>()
  nameWithType: EntityManager.GetEntities<T>()
  fullName: Hel.Engine.ECS.Entities.EntityManager.GetEntities<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: GetEntities
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 95
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public EntityDictionary GetEntities<T>()
    typeParameters:
    - id: T
    return:
      type: Hel.Engine.ECS.Entities.EntityDictionary
    content.vb: Public Function GetEntities(Of T) As EntityDictionary
  overload: Hel.Engine.ECS.Entities.EntityManager.GetEntities*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.GetEntities``1
  nameWithType.vb: EntityManager.GetEntities(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Entities.EntityManager.GetEntities(Of T)()
  name.vb: GetEntities(Of T)()
- uid: Hel.Engine.ECS.Entities.EntityManager.GetEntities(System.UInt32)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.GetEntities(System.UInt32)
  id: GetEntities(System.UInt32)
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: GetEntities(UInt32)
  nameWithType: EntityManager.GetEntities(UInt32)
  fullName: Hel.Engine.ECS.Entities.EntityManager.GetEntities(System.UInt32)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: GetEntities
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 101
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public EntityDictionary GetEntities(uint ID)
    parameters:
    - id: ID
      type: System.UInt32
    return:
      type: Hel.Engine.ECS.Entities.EntityDictionary
    content.vb: Public Function GetEntities(ID As UInteger) As EntityDictionary
  overload: Hel.Engine.ECS.Entities.EntityManager.GetEntities*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.GetEntities(System.UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.RemoveEntity(System.UInt32)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.RemoveEntity(System.UInt32)
  id: RemoveEntity(System.UInt32)
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: RemoveEntity(UInt32)
  nameWithType: EntityManager.RemoveEntity(UInt32)
  fullName: Hel.Engine.ECS.Entities.EntityManager.RemoveEntity(System.UInt32)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: RemoveEntity
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 104
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public void RemoveEntity(uint ID)
    parameters:
    - id: ID
      type: System.UInt32
    content.vb: Public Sub RemoveEntity(ID As UInteger)
  overload: Hel.Engine.ECS.Entities.EntityManager.RemoveEntity*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity(System.UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  id: RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: RemoveEntities(IEnumerable<UInt32>)
  nameWithType: EntityManager.RemoveEntities(IEnumerable<UInt32>)
  fullName: Hel.Engine.ECS.Entities.EntityManager.RemoveEntities(System.Collections.Generic.IEnumerable<System.UInt32>)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: RemoveEntities
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 111
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public void RemoveEntities(IEnumerable<uint> entitiesList)
    parameters:
    - id: entitiesList
      type: System.Collections.Generic.IEnumerable{System.UInt32}
    content.vb: Public Sub RemoveEntities(entitiesList As IEnumerable(Of UInteger))
  overload: Hel.Engine.ECS.Entities.EntityManager.RemoveEntities*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  nameWithType.vb: EntityManager.RemoveEntities(IEnumerable(Of UInt32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Entities.EntityManager.RemoveEntities(System.Collections.Generic.IEnumerable(Of System.UInt32))
  name.vb: RemoveEntities(IEnumerable(Of UInt32))
- uid: Hel.Engine.ECS.Entities.EntityManager.ClearEntities
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.ClearEntities
  id: ClearEntities
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: ClearEntities()
  nameWithType: EntityManager.ClearEntities()
  fullName: Hel.Engine.ECS.Entities.EntityManager.ClearEntities()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: ClearEntities
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 117
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public void ClearEntities()
    content.vb: Public Sub ClearEntities
  overload: Hel.Engine.ECS.Entities.EntityManager.ClearEntities*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType``1
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType``1
  id: ClearEntitiesType``1
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: ClearEntitiesType<T>()
  nameWithType: EntityManager.ClearEntitiesType<T>()
  fullName: Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: ClearEntitiesType
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 119
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public void ClearEntitiesType<T>()
    typeParameters:
    - id: T
    content.vb: Public Sub ClearEntitiesType(Of T)
  overload: Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType``1
  nameWithType.vb: EntityManager.ClearEntitiesType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType(Of T)()
  name.vb: ClearEntitiesType(Of T)()
- uid: Hel.Engine.ECS.Entities.EntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  commentId: M:Hel.Engine.ECS.Entities.EntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  id: UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  parent: Hel.Engine.ECS.Entities.EntityManager
  langs:
  - csharp
  - vb
  name: UpdateEntity(UInt32, ComponentDictionary)
  nameWithType: EntityManager.UpdateEntity(UInt32, ComponentDictionary)
  fullName: Hel.Engine.ECS.Entities.EntityManager.UpdateEntity(System.UInt32, Hel.Engine.ECS.Components.ComponentDictionary)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/EntityManager.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: UpdateEntity
    path: ../Hel.Engine/ECS/Entities/EntityManager.cs
    startLine: 130
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  syntax:
    content: public void UpdateEntity(uint id, ComponentDictionary components)
    parameters:
    - id: id
      type: System.UInt32
    - id: components
      type: Hel.Engine.ECS.Components.ComponentDictionary
    content.vb: Public Sub UpdateEntity(id As UInteger, components As ComponentDictionary)
  overload: Hel.Engine.ECS.Entities.EntityManager.UpdateEntity*
  implements:
  - Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Hel.Engine.ECS.Entities
  commentId: N:Hel.Engine.ECS.Entities
  name: Hel.Engine.ECS.Entities
  nameWithType: Hel.Engine.ECS.Entities
  fullName: Hel.Engine.ECS.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Engine.ECS.Entities.IEntityManager
  commentId: T:Hel.Engine.ECS.Entities.IEntityManager
  parent: Hel.Engine.ECS.Entities
  name: IEntityManager
  nameWithType: IEntityManager
  fullName: Hel.Engine.ECS.Entities.IEntityManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Engine.ECS.Entities.EntityManager.World*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.World
  name: World
  nameWithType: EntityManager.World
  fullName: Hel.Engine.ECS.Entities.EntityManager.World
- uid: Hel.Engine.ECS.Entities.IEntityManager.World
  commentId: P:Hel.Engine.ECS.Entities.IEntityManager.World
  parent: Hel.Engine.ECS.Entities.IEntityManager
  name: World
  nameWithType: IEntityManager.World
  fullName: Hel.Engine.ECS.Entities.IEntityManager.World
- uid: Hel.Engine.ECS.World
  commentId: T:Hel.Engine.ECS.World
  parent: Hel.Engine.ECS
  name: World
  nameWithType: World
  fullName: Hel.Engine.ECS.World
- uid: Hel.Engine.ECS
  commentId: N:Hel.Engine.ECS
  name: Hel.Engine.ECS
  nameWithType: Hel.Engine.ECS
  fullName: Hel.Engine.ECS
- uid: Hel.Engine.ECS.Entities.EntityManager.#ctor*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.#ctor
  name: EntityManager
  nameWithType: EntityManager.EntityManager
  fullName: Hel.Engine.ECS.Entities.EntityManager.EntityManager
- uid: Hel.Engine.ECS.Entities.EntityManager.CreateEntity*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.CreateEntity
  name: CreateEntity
  nameWithType: EntityManager.CreateEntity
  fullName: Hel.Engine.ECS.Entities.EntityManager.CreateEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hel.Engine.ECS.Entities.IEntity
  commentId: T:Hel.Engine.ECS.Entities.IEntity
  parent: Hel.Engine.ECS.Entities
  name: IEntity
  nameWithType: IEntity
  fullName: Hel.Engine.ECS.Entities.IEntity
- uid: Hel.Engine.ECS.Entities.EntityManager.LoadJSON*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.LoadJSON
  name: LoadJSON
  nameWithType: EntityManager.LoadJSON
  fullName: Hel.Engine.ECS.Entities.EntityManager.LoadJSON
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply
  name: CreateEntityApply
  nameWithType: EntityManager.CreateEntityApply
  fullName: Hel.Engine.ECS.Entities.EntityManager.CreateEntityApply
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Hel.Engine.ECS.Entities.EntityManager.AddEntity*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.AddEntity
  name: AddEntity
  nameWithType: EntityManager.AddEntity
  fullName: Hel.Engine.ECS.Entities.EntityManager.AddEntity
- uid: Hel.Engine.ECS.Entities.IEntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  parent: Hel.Engine.ECS.Entities.IEntityManager
  name: AddEntity(IEntity)
  nameWithType: IEntityManager.AddEntity(IEntity)
  fullName: Hel.Engine.ECS.Entities.IEntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
    name: AddEntity
    nameWithType: IEntityManager.AddEntity
    fullName: Hel.Engine.ECS.Entities.IEntityManager.AddEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hel.Engine.ECS.Entities.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: Hel.Engine.ECS.Entities.IEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.AddEntity(Hel.Engine.ECS.Entities.IEntity)
    name: AddEntity
    nameWithType: IEntityManager.AddEntity
    fullName: Hel.Engine.ECS.Entities.IEntityManager.AddEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hel.Engine.ECS.Entities.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: Hel.Engine.ECS.Entities.IEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityManager.GetEntities*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.GetEntities
  name: GetEntities
  nameWithType: EntityManager.GetEntities
  fullName: Hel.Engine.ECS.Entities.EntityManager.GetEntities
- uid: Hel.Engine.ECS.Entities.IEntityManager.GetEntities``1
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.GetEntities``1
  parent: Hel.Engine.ECS.Entities.IEntityManager
  name: GetEntities<T>()
  nameWithType: IEntityManager.GetEntities<T>()
  fullName: Hel.Engine.ECS.Entities.IEntityManager.GetEntities<T>()
  nameWithType.vb: IEntityManager.GetEntities(Of T)()
  fullName.vb: Hel.Engine.ECS.Entities.IEntityManager.GetEntities(Of T)()
  name.vb: GetEntities(Of T)()
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.GetEntities``1
    name: GetEntities<T>
    nameWithType: IEntityManager.GetEntities<T>
    fullName: Hel.Engine.ECS.Entities.IEntityManager.GetEntities<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.GetEntities``1
    name: GetEntities(Of T)
    nameWithType: IEntityManager.GetEntities(Of T)
    fullName: Hel.Engine.ECS.Entities.IEntityManager.GetEntities(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityDictionary
  commentId: T:Hel.Engine.ECS.Entities.EntityDictionary
  parent: Hel.Engine.ECS.Entities
  name: EntityDictionary
  nameWithType: EntityDictionary
  fullName: Hel.Engine.ECS.Entities.EntityDictionary
- uid: Hel.Engine.ECS.Entities.IEntityManager.GetEntities(System.UInt32)
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.GetEntities(System.UInt32)
  parent: Hel.Engine.ECS.Entities.IEntityManager
  isExternal: true
  name: GetEntities(UInt32)
  nameWithType: IEntityManager.GetEntities(UInt32)
  fullName: Hel.Engine.ECS.Entities.IEntityManager.GetEntities(System.UInt32)
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.GetEntities(System.UInt32)
    name: GetEntities
    nameWithType: IEntityManager.GetEntities
    fullName: Hel.Engine.ECS.Entities.IEntityManager.GetEntities
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.GetEntities(System.UInt32)
    name: GetEntities
    nameWithType: IEntityManager.GetEntities
    fullName: Hel.Engine.ECS.Entities.IEntityManager.GetEntities
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityManager.RemoveEntity*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.RemoveEntity
  name: RemoveEntity
  nameWithType: EntityManager.RemoveEntity
  fullName: Hel.Engine.ECS.Entities.EntityManager.RemoveEntity
- uid: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity(System.UInt32)
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity(System.UInt32)
  parent: Hel.Engine.ECS.Entities.IEntityManager
  isExternal: true
  name: RemoveEntity(UInt32)
  nameWithType: IEntityManager.RemoveEntity(UInt32)
  fullName: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity(System.UInt32)
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity(System.UInt32)
    name: RemoveEntity
    nameWithType: IEntityManager.RemoveEntity
    fullName: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity(System.UInt32)
    name: RemoveEntity
    nameWithType: IEntityManager.RemoveEntity
    fullName: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityManager.RemoveEntities*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.RemoveEntities
  name: RemoveEntities
  nameWithType: EntityManager.RemoveEntities
  fullName: Hel.Engine.ECS.Entities.EntityManager.RemoveEntities
- uid: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
  parent: Hel.Engine.ECS.Entities.IEntityManager
  isExternal: true
  name: RemoveEntities(IEnumerable<UInt32>)
  nameWithType: IEntityManager.RemoveEntities(IEnumerable<UInt32>)
  fullName: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable<System.UInt32>)
  nameWithType.vb: IEntityManager.RemoveEntities(IEnumerable(Of UInt32))
  fullName.vb: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable(Of System.UInt32))
  name.vb: RemoveEntities(IEnumerable(Of UInt32))
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
    name: RemoveEntities
    nameWithType: IEntityManager.RemoveEntities
    fullName: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.UInt32})
    name: RemoveEntities
    nameWithType: IEntityManager.RemoveEntities
    fullName: Hel.Engine.ECS.Entities.IEntityManager.RemoveEntities
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UInt32>
  nameWithType: IEnumerable<UInt32>
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>
  nameWithType.vb: IEnumerable(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32)
  name.vb: IEnumerable(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityManager.ClearEntities*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.ClearEntities
  name: ClearEntities
  nameWithType: EntityManager.ClearEntities
  fullName: Hel.Engine.ECS.Entities.EntityManager.ClearEntities
- uid: Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
  parent: Hel.Engine.ECS.Entities.IEntityManager
  name: ClearEntities()
  nameWithType: IEntityManager.ClearEntities()
  fullName: Hel.Engine.ECS.Entities.IEntityManager.ClearEntities()
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
    name: ClearEntities
    nameWithType: IEntityManager.ClearEntities
    fullName: Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
    name: ClearEntities
    nameWithType: IEntityManager.ClearEntities
    fullName: Hel.Engine.ECS.Entities.IEntityManager.ClearEntities
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType
  name: ClearEntitiesType
  nameWithType: EntityManager.ClearEntitiesType
  fullName: Hel.Engine.ECS.Entities.EntityManager.ClearEntitiesType
- uid: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType``1
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType``1
  parent: Hel.Engine.ECS.Entities.IEntityManager
  name: ClearEntitiesType<T>()
  nameWithType: IEntityManager.ClearEntitiesType<T>()
  fullName: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType<T>()
  nameWithType.vb: IEntityManager.ClearEntitiesType(Of T)()
  fullName.vb: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType(Of T)()
  name.vb: ClearEntitiesType(Of T)()
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType``1
    name: ClearEntitiesType<T>
    nameWithType: IEntityManager.ClearEntitiesType<T>
    fullName: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType``1
    name: ClearEntitiesType(Of T)
    nameWithType: IEntityManager.ClearEntitiesType(Of T)
    fullName: Hel.Engine.ECS.Entities.IEntityManager.ClearEntitiesType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Entities.EntityManager.UpdateEntity*
  commentId: Overload:Hel.Engine.ECS.Entities.EntityManager.UpdateEntity
  name: UpdateEntity
  nameWithType: EntityManager.UpdateEntity
  fullName: Hel.Engine.ECS.Entities.EntityManager.UpdateEntity
- uid: Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  commentId: M:Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
  parent: Hel.Engine.ECS.Entities.IEntityManager
  isExternal: true
  name: UpdateEntity(UInt32, ComponentDictionary)
  nameWithType: IEntityManager.UpdateEntity(UInt32, ComponentDictionary)
  fullName: Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity(System.UInt32, Hel.Engine.ECS.Components.ComponentDictionary)
  spec.csharp:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
    name: UpdateEntity
    nameWithType: IEntityManager.UpdateEntity
    fullName: Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.ComponentDictionary
    name: ComponentDictionary
    nameWithType: ComponentDictionary
    fullName: Hel.Engine.ECS.Components.ComponentDictionary
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity(System.UInt32,Hel.Engine.ECS.Components.ComponentDictionary)
    name: UpdateEntity
    nameWithType: IEntityManager.UpdateEntity
    fullName: Hel.Engine.ECS.Entities.IEntityManager.UpdateEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.ComponentDictionary
    name: ComponentDictionary
    nameWithType: ComponentDictionary
    fullName: Hel.Engine.ECS.Components.ComponentDictionary
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Components.ComponentDictionary
  commentId: T:Hel.Engine.ECS.Components.ComponentDictionary
  parent: Hel.Engine.ECS.Components
  name: ComponentDictionary
  nameWithType: ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary
- uid: Hel.Engine.ECS.Components
  commentId: N:Hel.Engine.ECS.Components
  name: Hel.Engine.ECS.Components
  nameWithType: Hel.Engine.ECS.Components
  fullName: Hel.Engine.ECS.Components
