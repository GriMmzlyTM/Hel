### YamlMime:ManagedReference
items:
- uid: Hel.Engine.ECS.World
  commentId: T:Hel.Engine.ECS.World
  id: World
  parent: Hel.Engine.ECS
  children:
  - Hel.Engine.ECS.World.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String)
  - Hel.Engine.ECS.World.EntityManager
  - Hel.Engine.ECS.World.Name
  - Hel.Engine.ECS.World.SpriteBatch
  - Hel.Engine.ECS.World.SystemManager
  langs:
  - csharp
  - vb
  name: World
  nameWithType: World
  fullName: Hel.Engine.ECS.World
  type: Class
  source:
    remote:
      path: Hel.Engine/ECS/World.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: World
    path: ../Hel.Engine/ECS/World.cs
    startLine: 11
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS
  summary: "\nWorlds are stored within World Managers and contain their own instance of\nEntityManager, SystemManager and SpriteBatch. \n"
  example: []
  syntax:
    content: public class World
    content.vb: Public Class World
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.ECS.World.Name
  commentId: P:Hel.Engine.ECS.World.Name
  id: Name
  parent: Hel.Engine.ECS.World
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: World.Name
  fullName: Hel.Engine.ECS.World.Name
  type: Property
  source:
    remote:
      path: Hel.Engine/ECS/World.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Name
    path: ../Hel.Engine/ECS/World.cs
    startLine: 13
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Hel.Engine.ECS.World.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hel.Engine.ECS.World.EntityManager
  commentId: F:Hel.Engine.ECS.World.EntityManager
  id: EntityManager
  parent: Hel.Engine.ECS.World
  langs:
  - csharp
  - vb
  name: EntityManager
  nameWithType: World.EntityManager
  fullName: Hel.Engine.ECS.World.EntityManager
  type: Field
  source:
    remote:
      path: Hel.Engine/ECS/World.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: EntityManager
    path: ../Hel.Engine/ECS/World.cs
    startLine: 14
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS
  syntax:
    content: public EntityManager EntityManager
    return:
      type: Hel.Engine.ECS.Entities.EntityManager
    content.vb: Public EntityManager As EntityManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.World.SystemManager
  commentId: F:Hel.Engine.ECS.World.SystemManager
  id: SystemManager
  parent: Hel.Engine.ECS.World
  langs:
  - csharp
  - vb
  name: SystemManager
  nameWithType: World.SystemManager
  fullName: Hel.Engine.ECS.World.SystemManager
  type: Field
  source:
    remote:
      path: Hel.Engine/ECS/World.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: SystemManager
    path: ../Hel.Engine/ECS/World.cs
    startLine: 15
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS
  syntax:
    content: public SystemManager SystemManager
    return:
      type: Hel.Engine.ECS.Systems.SystemManager
    content.vb: Public SystemManager As SystemManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.World.SpriteBatch
  commentId: P:Hel.Engine.ECS.World.SpriteBatch
  id: SpriteBatch
  parent: Hel.Engine.ECS.World
  langs:
  - csharp
  - vb
  name: SpriteBatch
  nameWithType: World.SpriteBatch
  fullName: Hel.Engine.ECS.World.SpriteBatch
  type: Property
  source:
    remote:
      path: Hel.Engine/ECS/World.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: SpriteBatch
    path: ../Hel.Engine/ECS/World.cs
    startLine: 16
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS
  syntax:
    content: public SpriteBatch SpriteBatch { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    content.vb: Public ReadOnly Property SpriteBatch As SpriteBatch
  overload: Hel.Engine.ECS.World.SpriteBatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hel.Engine.ECS.World.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String)
  commentId: M:Hel.Engine.ECS.World.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String)
  id: '#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String)'
  parent: Hel.Engine.ECS.World
  langs:
  - csharp
  - vb
  name: World(Game, SpriteBatch, String)
  nameWithType: World.World(Game, SpriteBatch, String)
  fullName: Hel.Engine.ECS.World.World(Microsoft.Xna.Framework.Game, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.String)
  type: Constructor
  source:
    remote:
      path: Hel.Engine/ECS/World.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: .ctor
    path: ../Hel.Engine/ECS/World.cs
    startLine: 18
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS
  syntax:
    content: public World(Game game, SpriteBatch spriteBatch, string name)
    parameters:
    - id: game
      type: Microsoft.Xna.Framework.Game
    - id: spriteBatch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: name
      type: System.String
    content.vb: Public Sub New(game As Game, spriteBatch As SpriteBatch, name As String)
  overload: Hel.Engine.ECS.World.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Hel.Engine.ECS
  commentId: N:Hel.Engine.ECS
  name: Hel.Engine.ECS
  nameWithType: Hel.Engine.ECS
  fullName: Hel.Engine.ECS
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hel.Engine.ECS.World.Name*
  commentId: Overload:Hel.Engine.ECS.World.Name
  name: Name
  nameWithType: World.Name
  fullName: Hel.Engine.ECS.World.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hel.Engine.ECS.Entities.EntityManager
  commentId: T:Hel.Engine.ECS.Entities.EntityManager
  parent: Hel.Engine.ECS.Entities
  name: EntityManager
  nameWithType: EntityManager
  fullName: Hel.Engine.ECS.Entities.EntityManager
- uid: Hel.Engine.ECS.Entities
  commentId: N:Hel.Engine.ECS.Entities
  name: Hel.Engine.ECS.Entities
  nameWithType: Hel.Engine.ECS.Entities
  fullName: Hel.Engine.ECS.Entities
- uid: Hel.Engine.ECS.Systems.SystemManager
  commentId: T:Hel.Engine.ECS.Systems.SystemManager
  parent: Hel.Engine.ECS.Systems
  name: SystemManager
  nameWithType: SystemManager
  fullName: Hel.Engine.ECS.Systems.SystemManager
- uid: Hel.Engine.ECS.Systems
  commentId: N:Hel.Engine.ECS.Systems
  name: Hel.Engine.ECS.Systems
  nameWithType: Hel.Engine.ECS.Systems
  fullName: Hel.Engine.ECS.Systems
- uid: Hel.Engine.ECS.World.SpriteBatch*
  commentId: Overload:Hel.Engine.ECS.World.SpriteBatch
  name: SpriteBatch
  nameWithType: World.SpriteBatch
  fullName: Hel.Engine.ECS.World.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: Hel.Engine.ECS.World.#ctor*
  commentId: Overload:Hel.Engine.ECS.World.#ctor
  name: World
  nameWithType: World.World
  fullName: Hel.Engine.ECS.World.World
- uid: Microsoft.Xna.Framework.Game
  commentId: T:Microsoft.Xna.Framework.Game
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Game
  nameWithType: Game
  fullName: Microsoft.Xna.Framework.Game
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
