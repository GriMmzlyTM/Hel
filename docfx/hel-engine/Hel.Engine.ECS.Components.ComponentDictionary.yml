### YamlMime:ManagedReference
items:
- uid: Hel.Engine.ECS.Components.ComponentDictionary
  commentId: T:Hel.Engine.ECS.Components.ComponentDictionary
  id: ComponentDictionary
  parent: Hel.Engine.ECS.Components
  children:
  - Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  - Hel.Engine.ECS.Components.ComponentDictionary.#ctor(System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent})
  - Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  - Hel.Engine.ECS.Components.ComponentDictionary.AddByType``1
  - Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType``1
  - Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail``1(``0@)
  - Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  - Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType``1
  - Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  - Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  langs:
  - csharp
  - vb
  name: ComponentDictionary
  nameWithType: ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary
  type: Class
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: ComponentDictionary
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 10
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class ComponentDictionary : Dictionary<Type, IComponent>, IDictionary<Type, IComponent>, ICollection<KeyValuePair<Type, IComponent>>, IReadOnlyDictionary<Type, IComponent>, IReadOnlyCollection<KeyValuePair<Type, IComponent>>, IEnumerable<KeyValuePair<Type, IComponent>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable'
    content.vb: >-
      Public Class ComponentDictionary
          Inherits Dictionary(Of Type, IComponent)
          Implements IDictionary(Of Type, IComponent), ICollection(Of KeyValuePair(Of Type, IComponent)), IReadOnlyDictionary(Of Type, IComponent), IReadOnlyCollection(Of KeyValuePair(Of Type, IComponent)), IEnumerable(Of KeyValuePair(Of Type, IComponent)), IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  implements:
  - System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  - System.Collections.Generic.IReadOnlyDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#get_Item(System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Add(System.Type,Hel.Engine.ECS.Components.IComponent)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Clear
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.ContainsKey(System.Type)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.ContainsValue(Hel.Engine.ECS.Components.IComponent)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.EnsureCapacity(System.Int32)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.GetEnumerator
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.OnDeserialization(System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Remove(System.Type)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Remove(System.Type,Hel.Engine.ECS.Components.IComponent@)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}[],System.Int32)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TrimExcess
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TrimExcess(System.Int32)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TryAdd(System.Type,Hel.Engine.ECS.Components.IComponent)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TryGetValue(System.Type,Hel.Engine.ECS.Components.IComponent@)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Comparer
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Count
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Item(System.Type)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Keys
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Keys
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Values
  - System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  id: '#ctor'
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: ComponentDictionary()
  nameWithType: ComponentDictionary.ComponentDictionary()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary()
  type: Constructor
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: .ctor
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 13
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public ComponentDictionary()
    content.vb: Public Sub New
  overload: Hel.Engine.ECS.Components.ComponentDictionary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.#ctor(System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent})
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.#ctor(System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent})
  id: '#ctor(System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent})'
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: ComponentDictionary(IDictionary<Type, IComponent>)
  nameWithType: ComponentDictionary.ComponentDictionary(IDictionary<Type, IComponent>)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary(System.Collections.Generic.IDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>)
  type: Constructor
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: .ctor
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 15
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public ComponentDictionary(IDictionary<Type, IComponent> newComponents)
    parameters:
    - id: newComponents
      type: System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
    content.vb: Public Sub New(newComponents As IDictionary(Of Type, IComponent))
  overload: Hel.Engine.ECS.Components.ComponentDictionary.#ctor*
  nameWithType.vb: ComponentDictionary.ComponentDictionary(IDictionary(Of Type, IComponent))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary(System.Collections.Generic.IDictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: ComponentDictionary(IDictionary(Of Type, IComponent))
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType``1
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType``1
  id: GetComponentOfType``1
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: GetComponentOfType<T>()
  nameWithType: ComponentDictionary.GetComponentOfType<T>()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: GetComponentOfType
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 22
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      public T GetComponentOfType<T>()
          where T : IComponent
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function GetComponentOfType(Of T As IComponent) As T
  overload: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType*
  nameWithType.vb: ComponentDictionary.GetComponentOfType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType(Of T)()
  name.vb: GetComponentOfType(Of T)()
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail``1(``0@)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail``1(``0@)
  id: GetComponentOrFail``1(``0@)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: GetComponentOrFail<T>(out T)
  nameWithType: ComponentDictionary.GetComponentOrFail<T>(out T)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail<T>(out T)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: GetComponentOrFail
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 37
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      public bool GetComponentOrFail<T>(out T component)
          where T : struct, IComponent
    parameters:
    - id: component
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function GetComponentOrFail(Of T As {Structure, IComponent})(ByRef component As T) As Boolean
  overload: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail*
  exceptions:
  - type: Hel.Engine.ECS.Exceptions.InvalidComponentException
    commentId: T:Hel.Engine.ECS.Exceptions.InvalidComponentException
    description: >-
      Unable to find component in dictionary -> If you aren&apos;t sure whether or not the

      component is in the dictionary, use <xref href="Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull%60%601(%60%600%40)" data-throw-if-not-resolved="false"></xref> instead.
  nameWithType.vb: ComponentDictionary.GetComponentOrFail(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail(Of T)(ByRef T)
  name.vb: GetComponentOrFail(Of T)(ByRef T)
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  id: GetComponentOrNull``1(``0@)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: GetComponentOrNull<T>(out T)
  nameWithType: ComponentDictionary.GetComponentOrNull<T>(out T)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull<T>(out T)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: GetComponentOrNull
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 52
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      public bool GetComponentOrNull<T>(out T component)
          where T : struct, IComponent
    parameters:
    - id: component
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function GetComponentOrNull(Of T As {Structure, IComponent})(ByRef component As T) As Boolean
  overload: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull*
  nameWithType.vb: ComponentDictionary.GetComponentOrNull(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull(Of T)(ByRef T)
  name.vb: GetComponentOrNull(Of T)(ByRef T)
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  id: UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: UpdateComponent(IComponent)
  nameWithType: ComponentDictionary.UpdateComponent(IComponent)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: UpdateComponent
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 61
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public void UpdateComponent(IComponent component)
    parameters:
    - id: component
      type: Hel.Engine.ECS.Components.IComponent
    content.vb: Public Sub UpdateComponent(component As IComponent)
  overload: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  id: UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: UpdateComponents(ComponentDictionary)
  nameWithType: ComponentDictionary.UpdateComponents(ComponentDictionary)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: UpdateComponents
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 71
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public void UpdateComponents(ComponentDictionary componentDictionary)
    parameters:
    - id: componentDictionary
      type: Hel.Engine.ECS.Components.ComponentDictionary
    content.vb: Public Sub UpdateComponents(componentDictionary As ComponentDictionary)
  overload: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  id: AddByObject(Hel.Engine.ECS.Components.IComponent)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: AddByObject(IComponent)
  nameWithType: ComponentDictionary.AddByObject(IComponent)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: AddByObject
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 77
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public void AddByObject(IComponent component)
    parameters:
    - id: component
      type: Hel.Engine.ECS.Components.IComponent
    content.vb: Public Sub AddByObject(component As IComponent)
  overload: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByType``1
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.AddByType``1
  id: AddByType``1
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: AddByType<T>()
  nameWithType: ComponentDictionary.AddByType<T>()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: AddByType
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 79
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public void AddByType<T>()
          where T : Type, IComponent, new()
    typeParameters:
    - id: T
    content.vb: Public Sub AddByType(Of T As {Type, IComponent, New})
  overload: Hel.Engine.ECS.Components.ComponentDictionary.AddByType*
  nameWithType.vb: ComponentDictionary.AddByType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.AddByType(Of T)()
  name.vb: AddByType(Of T)()
- uid: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType``1
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType``1
  id: RemoveByType``1
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: RemoveByType<T>()
  nameWithType: ComponentDictionary.RemoveByType<T>()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: RemoveByType
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 81
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public void RemoveByType<T>()
          where T : Type, IComponent
    typeParameters:
    - id: T
    content.vb: Public Sub RemoveByType(Of T As {Type, IComponent})
  overload: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType*
  nameWithType.vb: ComponentDictionary.RemoveByType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType(Of T)()
  name.vb: RemoveByType(Of T)()
references:
- uid: Hel.Engine.ECS.Components
  commentId: N:Hel.Engine.ECS.Components
  name: Hel.Engine.ECS.Components
  nameWithType: Hel.Engine.ECS.Components
  fullName: Hel.Engine.ECS.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, IComponent>
  nameWithType: Dictionary<Type, IComponent>
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>
  nameWithType.vb: Dictionary(Of Type, IComponent)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent)
  name.vb: Dictionary(Of Type, IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, IComponent>
  nameWithType: IDictionary<Type, IComponent>
  fullName: System.Collections.Generic.IDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>
  nameWithType.vb: IDictionary(Of Type, IComponent)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent)
  name.vb: IDictionary(Of Type, IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<Type, IComponent>>
  nameWithType: ICollection<KeyValuePair<Type, IComponent>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of Type, IComponent))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: ICollection(Of KeyValuePair(Of Type, IComponent))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<Type, IComponent>
  nameWithType: IReadOnlyDictionary<Type, IComponent>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>
  nameWithType.vb: IReadOnlyDictionary(Of Type, IComponent)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent)
  name.vb: IReadOnlyDictionary(Of Type, IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<KeyValuePair<Type, IComponent>>
  nameWithType: IReadOnlyCollection<KeyValuePair<Type, IComponent>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of Type, IComponent))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of Type, IComponent))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, IComponent>>
  nameWithType: IEnumerable<KeyValuePair<Type, IComponent>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, IComponent))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, IComponent))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Runtime.Serialization.IDeserializationCallback
  commentId: T:System.Runtime.Serialization.IDeserializationCallback
  parent: System.Runtime.Serialization
  isExternal: true
  name: IDeserializationCallback
  nameWithType: IDeserializationCallback
  fullName: System.Runtime.Serialization.IDeserializationCallback
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#get_Item(System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  name: IDictionary.get_Item(Object)
  nameWithType: Dictionary<Type, IComponent>.IDictionary.get_Item(Object)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.get_Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: Dictionary<Type, IComponent>.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  name: IDictionary.set_Item(Object, Object)
  nameWithType: Dictionary<Type, IComponent>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.set_Item(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: Dictionary<Type, IComponent>.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Add(System.Type,Hel.Engine.ECS.Components.IComponent)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Add(System.Type,Hel.Engine.ECS.Components.IComponent)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  name: Add(Type, IComponent)
  nameWithType: Dictionary<Type, IComponent>.Add(Type, IComponent)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Add(System.Type, Hel.Engine.ECS.Components.IComponent)
  nameWithType.vb: Dictionary(Of Type, IComponent).Add(Type, IComponent)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Add(System.Type, Hel.Engine.ECS.Components.IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary<Type, IComponent>.Add
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary(Of Type, IComponent).Add
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Clear
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Clear
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Clear
  name: Clear()
  nameWithType: Dictionary<Type, IComponent>.Clear()
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Clear()
  nameWithType.vb: Dictionary(Of Type, IComponent).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary<Type, IComponent>.Clear
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary(Of Type, IComponent).Clear
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.ContainsKey(System.Type)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.ContainsKey(System.Type)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  name: ContainsKey(Type)
  nameWithType: Dictionary<Type, IComponent>.ContainsKey(Type)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.ContainsKey(System.Type)
  nameWithType.vb: Dictionary(Of Type, IComponent).ContainsKey(Type)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).ContainsKey(System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary<Type, IComponent>.ContainsKey
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary(Of Type, IComponent).ContainsKey
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.ContainsValue(Hel.Engine.ECS.Components.IComponent)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.ContainsValue(Hel.Engine.ECS.Components.IComponent)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  name: ContainsValue(IComponent)
  nameWithType: Dictionary<Type, IComponent>.ContainsValue(IComponent)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.ContainsValue(Hel.Engine.ECS.Components.IComponent)
  nameWithType.vb: Dictionary(Of Type, IComponent).ContainsValue(IComponent)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).ContainsValue(Hel.Engine.ECS.Components.IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary<Type, IComponent>.ContainsValue
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary(Of Type, IComponent).ContainsValue
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.EnsureCapacity(System.Int32)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
  name: EnsureCapacity(Int32)
  nameWithType: Dictionary<Type, IComponent>.EnsureCapacity(Int32)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.EnsureCapacity(System.Int32)
  nameWithType.vb: Dictionary(Of Type, IComponent).EnsureCapacity(Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: Dictionary<Type, IComponent>.EnsureCapacity
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.EnsureCapacity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: Dictionary(Of Type, IComponent).EnsureCapacity
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).EnsureCapacity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: Dictionary<Type, IComponent>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.GetEnumerator()
  nameWithType.vb: Dictionary(Of Type, IComponent).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary<Type, IComponent>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary(Of Type, IComponent).GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Dictionary<Type, IComponent>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: Dictionary(Of Type, IComponent).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary<Type, IComponent>.GetObjectData
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary(Of Type, IComponent).GetObjectData
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.OnDeserialization(System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  name: OnDeserialization(Object)
  nameWithType: Dictionary<Type, IComponent>.OnDeserialization(Object)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.OnDeserialization(System.Object)
  nameWithType.vb: Dictionary(Of Type, IComponent).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).OnDeserialization(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary<Type, IComponent>.OnDeserialization
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary(Of Type, IComponent).OnDeserialization
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Remove(System.Type)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Remove(System.Type)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Remove(`0)
  name: Remove(Type)
  nameWithType: Dictionary<Type, IComponent>.Remove(Type)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Remove(System.Type)
  nameWithType.vb: Dictionary(Of Type, IComponent).Remove(Type)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Remove(System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary<Type, IComponent>.Remove
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary(Of Type, IComponent).Remove
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Remove(System.Type,Hel.Engine.ECS.Components.IComponent@)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Remove(System.Type,Hel.Engine.ECS.Components.IComponent@)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
  name: Remove(Type, IComponent)
  nameWithType: Dictionary<Type, IComponent>.Remove(Type, IComponent)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Remove(System.Type, Hel.Engine.ECS.Components.IComponent)
  nameWithType.vb: Dictionary(Of Type, IComponent).Remove(Type, IComponent)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Remove(System.Type, Hel.Engine.ECS.Components.IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
    name: Remove
    nameWithType: Dictionary<Type, IComponent>.Remove
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
    name: Remove
    nameWithType: Dictionary(Of Type, IComponent).Remove
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<Type, IComponent>>.Add(KeyValuePair<Type, IComponent>)
  nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.Add(KeyValuePair<Type, IComponent>)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.Add(System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of Type, IComponent))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of Type, IComponent))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<Type, IComponent>>.Add
    nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.Add
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<Type, IComponent>>.Contains(KeyValuePair<Type, IComponent>)
  nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.Contains(KeyValuePair<Type, IComponent>)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.Contains(System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of Type, IComponent))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of Type, IComponent))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<Type, IComponent>>.Contains
    nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.Contains
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}[],System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent}[],System.Int32)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  name: ICollection<KeyValuePair<Type, IComponent>>.CopyTo(KeyValuePair<Type, IComponent>[], Int32)
  nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.CopyTo(KeyValuePair<Type, IComponent>[], Int32)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.CopyTo(System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>[], System.Int32)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of Type, IComponent)(), Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of Type, IComponent)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<Type, IComponent>>.CopyTo
    nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.CopyTo
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.Type,Hel.Engine.ECS.Components.IComponent})
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<Type, IComponent>>.Remove(KeyValuePair<Type, IComponent>)
  nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.Remove(KeyValuePair<Type, IComponent>)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.Remove(System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of Type, IComponent))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of System.Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of Type, IComponent))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<Type, IComponent>>.Remove
    nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.Remove
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  name: IEnumerable<KeyValuePair<Type, IComponent>>.GetEnumerator()
  nameWithType: Dictionary<Type, IComponent>.IEnumerable<KeyValuePair<Type, IComponent>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: IEnumerable<KeyValuePair<Type, IComponent>>.GetEnumerator
    nameWithType: Dictionary<Type, IComponent>.IEnumerable<KeyValuePair<Type, IComponent>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Dictionary<Type, IComponent>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Dictionary<Type, IComponent>.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name: IDictionary.Add(Object, Object)
  nameWithType: Dictionary<Type, IComponent>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: Dictionary<Type, IComponent>.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<Type, IComponent>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Contains(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: Dictionary<Type, IComponent>.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<Type, IComponent>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: Dictionary<Type, IComponent>.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<Type, IComponent>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Remove(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: Dictionary<Type, IComponent>.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<Type, IComponent>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Dictionary<Type, IComponent>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TrimExcess
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TrimExcess
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.TrimExcess
  name: TrimExcess()
  nameWithType: Dictionary<Type, IComponent>.TrimExcess()
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TrimExcess()
  nameWithType.vb: Dictionary(Of Type, IComponent).TrimExcess()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess
    name: TrimExcess
    nameWithType: Dictionary<Type, IComponent>.TrimExcess
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess
    name: TrimExcess
    nameWithType: Dictionary(Of Type, IComponent).TrimExcess
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TrimExcess(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TrimExcess(System.Int32)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
  name: TrimExcess(Int32)
  nameWithType: Dictionary<Type, IComponent>.TrimExcess(Int32)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TrimExcess(System.Int32)
  nameWithType.vb: Dictionary(Of Type, IComponent).TrimExcess(Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TrimExcess(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
    name: TrimExcess
    nameWithType: Dictionary<Type, IComponent>.TrimExcess
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
    name: TrimExcess
    nameWithType: Dictionary(Of Type, IComponent).TrimExcess
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TryAdd(System.Type,Hel.Engine.ECS.Components.IComponent)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TryAdd(System.Type,Hel.Engine.ECS.Components.IComponent)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
  name: TryAdd(Type, IComponent)
  nameWithType: Dictionary<Type, IComponent>.TryAdd(Type, IComponent)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TryAdd(System.Type, Hel.Engine.ECS.Components.IComponent)
  nameWithType.vb: Dictionary(Of Type, IComponent).TryAdd(Type, IComponent)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TryAdd(System.Type, Hel.Engine.ECS.Components.IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: Dictionary<Type, IComponent>.TryAdd
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: Dictionary(Of Type, IComponent).TryAdd
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TryGetValue(System.Type,Hel.Engine.ECS.Components.IComponent@)
  commentId: M:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.TryGetValue(System.Type,Hel.Engine.ECS.Components.IComponent@)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(Type, IComponent)
  nameWithType: Dictionary<Type, IComponent>.TryGetValue(Type, IComponent)
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TryGetValue(System.Type, Hel.Engine.ECS.Components.IComponent)
  nameWithType.vb: Dictionary(Of Type, IComponent).TryGetValue(Type, IComponent)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TryGetValue(System.Type, Hel.Engine.ECS.Components.IComponent)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary<Type, IComponent>.TryGetValue
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary(Of Type, IComponent).TryGetValue
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Comparer
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Comparer
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Comparer
  name: Comparer
  nameWithType: Dictionary<Type, IComponent>.Comparer
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Comparer
  nameWithType.vb: Dictionary(Of Type, IComponent).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Comparer
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Count
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Count
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Count
  name: Count
  nameWithType: Dictionary<Type, IComponent>.Count
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Count
  nameWithType.vb: Dictionary(Of Type, IComponent).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Count
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Item(System.Type)
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Item(System.Type)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Item(`0)
  name: Item[Type]
  nameWithType: Dictionary<Type, IComponent>.Item[Type]
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Item[System.Type]
  nameWithType.vb: Dictionary(Of Type, IComponent).Item(Type)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Item(System.Type)
  name.vb: Item(Type)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary<Type, IComponent>.Item
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary(Of Type, IComponent).Item
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Keys
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Keys
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Keys
  name: Keys
  nameWithType: Dictionary<Type, IComponent>.Keys
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Keys
  nameWithType.vb: Dictionary(Of Type, IComponent).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Keys
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  name: ICollection<KeyValuePair<Type, IComponent>>.IsReadOnly
  nameWithType: Dictionary<Type, IComponent>.ICollection<KeyValuePair<Type, IComponent>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, Hel.Engine.ECS.Components.IComponent>>.IsReadOnly
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  name: IDictionary<Type, IComponent>.Keys
  nameWithType: Dictionary<Type, IComponent>.IDictionary<Type, IComponent>.Keys
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.IDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Keys
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  name: IDictionary<Type, IComponent>.Values
  nameWithType: Dictionary<Type, IComponent>.IDictionary<Type, IComponent>.Values
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.IDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Values
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  name: IReadOnlyDictionary<Type, IComponent>.Keys
  nameWithType: Dictionary<Type, IComponent>.IReadOnlyDictionary<Type, IComponent>.Keys
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.IReadOnlyDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Keys
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  name: IReadOnlyDictionary<Type, IComponent>.Values
  nameWithType: Dictionary<Type, IComponent>.IReadOnlyDictionary<Type, IComponent>.Values
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.Generic.IReadOnlyDictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Values
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<Type, IComponent>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Dictionary<Type, IComponent>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<Type, IComponent>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<Type, IComponent>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  name: IDictionary.Item[Object]
  nameWithType: Dictionary<Type, IComponent>.IDictionary.Item[Object]
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: Dictionary<Type, IComponent>.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Keys
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  nameWithType: Dictionary<Type, IComponent>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Keys
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.System#Collections#IDictionary#Values
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  name: IDictionary.Values
  nameWithType: Dictionary<Type, IComponent>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.System.Collections.IDictionary.Values
  nameWithType.vb: Dictionary(Of Type, IComponent).System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Values
  commentId: P:System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}.Values
  parent: System.Collections.Generic.Dictionary{System.Type,Hel.Engine.ECS.Components.IComponent}
  definition: System.Collections.Generic.Dictionary`2.Values
  name: Values
  nameWithType: Dictionary<Type, IComponent>.Values
  fullName: System.Collections.Generic.Dictionary<System.Type, Hel.Engine.ECS.Components.IComponent>.Values
  nameWithType.vb: Dictionary(Of Type, IComponent).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Hel.Engine.ECS.Components.IComponent).Values
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  isExternal: true
  name: IDictionary.get_Item(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  isExternal: true
  name: IDictionary.set_Item(Object, Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.Dictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Clear
  commentId: M:System.Collections.Generic.Dictionary`2.Clear
  isExternal: true
  name: Clear()
  nameWithType: Dictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear()
  nameWithType.vb: Dictionary(Of TKey, TValue).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary<TKey, TValue>.Clear
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary(Of TKey, TValue).Clear
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  isExternal: true
  name: ContainsValue(TValue)
  nameWithType: Dictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue(TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary<TKey, TValue>.ContainsValue
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary(Of TKey, TValue).ContainsValue
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
  isExternal: true
  name: EnsureCapacity(Int32)
  nameWithType: Dictionary<TKey, TValue>.EnsureCapacity(Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.EnsureCapacity(System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).EnsureCapacity(Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: Dictionary<TKey, TValue>.EnsureCapacity
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.EnsureCapacity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: Dictionary(Of TKey, TValue).EnsureCapacity
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).EnsureCapacity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Dictionary<TKey, TValue>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: Dictionary(Of TKey, TValue).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary<TKey, TValue>.GetObjectData
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary(Of TKey, TValue).GetObjectData
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  isExternal: true
  name: OnDeserialization(Object)
  nameWithType: Dictionary<TKey, TValue>.OnDeserialization(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary<TKey, TValue>.OnDeserialization
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary(Of TKey, TValue).OnDeserialization
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: Dictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
  commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
  isExternal: true
  name: Remove(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.Remove(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).Remove(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
    name: Remove
    nameWithType: Dictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
    name: Remove
    nameWithType: Dictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Add
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Contains
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Remove
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  isExternal: true
  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  isExternal: true
  name: IDictionary.Add(Object, Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  isExternal: true
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  isExternal: true
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  isExternal: true
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.TrimExcess
  commentId: M:System.Collections.Generic.Dictionary`2.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: Dictionary<TKey, TValue>.TrimExcess()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TrimExcess()
  nameWithType.vb: Dictionary(Of TKey, TValue).TrimExcess()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess
    name: TrimExcess
    nameWithType: Dictionary<TKey, TValue>.TrimExcess
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess
    name: TrimExcess
    nameWithType: Dictionary(Of TKey, TValue).TrimExcess
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
  isExternal: true
  name: TrimExcess(Int32)
  nameWithType: Dictionary<TKey, TValue>.TrimExcess(Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TrimExcess(System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).TrimExcess(Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TrimExcess(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
    name: TrimExcess
    nameWithType: Dictionary<TKey, TValue>.TrimExcess
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
    name: TrimExcess
    nameWithType: Dictionary(Of TKey, TValue).TrimExcess
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
  commentId: M:System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
  isExternal: true
  name: TryAdd(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.TryAdd(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryAdd(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: Dictionary<TKey, TValue>.TryAdd
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: Dictionary(Of TKey, TValue).TryAdd
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Comparer
  commentId: P:System.Collections.Generic.Dictionary`2.Comparer
  isExternal: true
  name: Comparer
  nameWithType: Dictionary<TKey, TValue>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
  nameWithType.vb: Dictionary(Of TKey, TValue).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
- uid: System.Collections.Generic.Dictionary`2.Count
  commentId: P:System.Collections.Generic.Dictionary`2.Count
  isExternal: true
  name: Count
  nameWithType: Dictionary<TKey, TValue>.Count
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
  nameWithType.vb: Dictionary(Of TKey, TValue).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.Dictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: Dictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: Dictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Keys
  commentId: P:System.Collections.Generic.Dictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: Dictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isExternal: true
  name: IDictionary<TKey, TValue>.Keys
  nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isExternal: true
  name: IDictionary<TKey, TValue>.Values
  nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<TKey, TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Dictionary<TKey, TValue>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  isExternal: true
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<TKey, TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  isExternal: true
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<TKey, TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  isExternal: true
  name: IDictionary.Item[Object]
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Item[Object]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  isExternal: true
  name: IDictionary.Keys
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  isExternal: true
  name: IDictionary.Values
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary`2.Values
  commentId: P:System.Collections.Generic.Dictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: Dictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
- uid: Hel.Engine.ECS.Components.ComponentDictionary.#ctor*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  name: ComponentDictionary
  nameWithType: ComponentDictionary.ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType
  name: GetComponentOfType
  nameWithType: ComponentDictionary.GetComponentOfType
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  isExternal: true
- uid: Hel.Engine.ECS.Exceptions.InvalidComponentException
  commentId: T:Hel.Engine.ECS.Exceptions.InvalidComponentException
  name: InvalidComponentException
  nameWithType: InvalidComponentException
  fullName: Hel.Engine.ECS.Exceptions.InvalidComponentException
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail
  name: GetComponentOrFail
  nameWithType: ComponentDictionary.GetComponentOrFail
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull
  name: GetComponentOrNull
  nameWithType: ComponentDictionary.GetComponentOrNull
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent
  name: UpdateComponent
  nameWithType: ComponentDictionary.UpdateComponent
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent
- uid: Hel.Engine.ECS.Components.IComponent
  commentId: T:Hel.Engine.ECS.Components.IComponent
  parent: Hel.Engine.ECS.Components
  name: IComponent
  nameWithType: IComponent
  fullName: Hel.Engine.ECS.Components.IComponent
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents
  name: UpdateComponents
  nameWithType: ComponentDictionary.UpdateComponents
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents
- uid: Hel.Engine.ECS.Components.ComponentDictionary
  commentId: T:Hel.Engine.ECS.Components.ComponentDictionary
  parent: Hel.Engine.ECS.Components
  name: ComponentDictionary
  nameWithType: ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.AddByObject
  name: AddByObject
  nameWithType: ComponentDictionary.AddByObject
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByType*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.AddByType
  name: AddByType
  nameWithType: ComponentDictionary.AddByType
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByType
- uid: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType
  name: RemoveByType
  nameWithType: ComponentDictionary.RemoveByType
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType
