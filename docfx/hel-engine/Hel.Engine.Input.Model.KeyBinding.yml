### YamlMime:ManagedReference
items:
- uid: Hel.Engine.Input.Model.KeyBinding
  commentId: T:Hel.Engine.Input.Model.KeyBinding
  id: KeyBinding
  parent: Hel.Engine.Input.Model
  children:
  - Hel.Engine.Input.Model.KeyBinding.#ctor(System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys},System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand})
  - Hel.Engine.Input.Model.KeyBinding.Commands
  - Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  - Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  - Hel.Engine.Input.Model.KeyBinding.GetHashCode
  - Hel.Engine.Input.Model.KeyBinding.Keys
  langs:
  - csharp
  - vb
  name: KeyBinding
  nameWithType: KeyBinding
  fullName: Hel.Engine.Input.Model.KeyBinding
  type: Class
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: KeyBinding
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 7
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: >-
      [Serializable]

      public class KeyBinding : IEquatable<KeyBinding>
    content.vb: >-
      <Serializable>

      Public Class KeyBinding
          Implements IEquatable(Of KeyBinding)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Hel.Engine.Input.Model.KeyBinding}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.Input.Model.KeyBinding.Keys
  commentId: P:Hel.Engine.Input.Model.KeyBinding.Keys
  id: Keys
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: KeyBinding.Keys
  fullName: Hel.Engine.Input.Model.KeyBinding.Keys
  type: Property
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Keys
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 10
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public HashSet<Keys> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys}
    content.vb: Public ReadOnly Property Keys As HashSet(Of Keys)
  overload: Hel.Engine.Input.Model.KeyBinding.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hel.Engine.Input.Model.KeyBinding.Commands
  commentId: P:Hel.Engine.Input.Model.KeyBinding.Commands
  id: Commands
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Commands
  nameWithType: KeyBinding.Commands
  fullName: Hel.Engine.Input.Model.KeyBinding.Commands
  type: Property
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Commands
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 11
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public List<ICommand> Commands { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand}
    content.vb: Public Property Commands As List(Of ICommand)
  overload: Hel.Engine.Input.Model.KeyBinding.Commands*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Engine.Input.Model.KeyBinding.#ctor(System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys},System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand})
  commentId: M:Hel.Engine.Input.Model.KeyBinding.#ctor(System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys},System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand})
  id: '#ctor(System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys},System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand})'
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: KeyBinding(HashSet<Keys>, List<ICommand>)
  nameWithType: KeyBinding.KeyBinding(HashSet<Keys>, List<ICommand>)
  fullName: Hel.Engine.Input.Model.KeyBinding.KeyBinding(System.Collections.Generic.HashSet<Microsoft.Xna.Framework.Input.Keys>, System.Collections.Generic.List<Hel.Engine.Commander.Model.ICommand>)
  type: Constructor
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: .ctor
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 13
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public KeyBinding(HashSet<Keys> keys, List<ICommand> commands)
    parameters:
    - id: keys
      type: System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys}
    - id: commands
      type: System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand}
    content.vb: Public Sub New(keys As HashSet(Of Keys), commands As List(Of ICommand))
  overload: Hel.Engine.Input.Model.KeyBinding.#ctor*
  nameWithType.vb: KeyBinding.KeyBinding(HashSet(Of Keys), List(Of ICommand))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.Input.Model.KeyBinding.KeyBinding(System.Collections.Generic.HashSet(Of Microsoft.Xna.Framework.Input.Keys), System.Collections.Generic.List(Of Hel.Engine.Commander.Model.ICommand))
  name.vb: KeyBinding(HashSet(Of Keys), List(Of ICommand))
- uid: Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  commentId: M:Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  id: Equals(System.Object)
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: KeyBinding.Equals(Object)
  fullName: Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Equals
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 19
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Hel.Engine.Input.Model.KeyBinding.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  commentId: M:Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  id: Equals(Hel.Engine.Input.Model.KeyBinding)
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Equals(KeyBinding)
  nameWithType: KeyBinding.Equals(KeyBinding)
  fullName: Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: Equals
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 26
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public bool Equals(KeyBinding other)
    parameters:
    - id: other
      type: Hel.Engine.Input.Model.KeyBinding
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As KeyBinding) As Boolean
  overload: Hel.Engine.Input.Model.KeyBinding.Equals*
  implements:
  - System.IEquatable{Hel.Engine.Input.Model.KeyBinding}.Equals(Hel.Engine.Input.Model.KeyBinding)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.Input.Model.KeyBinding.GetHashCode
  commentId: M:Hel.Engine.Input.Model.KeyBinding.GetHashCode
  id: GetHashCode
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: KeyBinding.GetHashCode()
  fullName: Hel.Engine.Input.Model.KeyBinding.GetHashCode()
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: master
      repo: https://github.com/GriMmzlyTM/Hel.git
    id: GetHashCode
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 29
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Hel.Engine.Input.Model.KeyBinding.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Hel.Engine.Input.Model
  commentId: N:Hel.Engine.Input.Model
  name: Hel.Engine.Input.Model
  nameWithType: Hel.Engine.Input.Model
  fullName: Hel.Engine.Input.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Hel.Engine.Input.Model.KeyBinding}
  commentId: T:System.IEquatable{Hel.Engine.Input.Model.KeyBinding}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<KeyBinding>
  nameWithType: IEquatable<KeyBinding>
  fullName: System.IEquatable<Hel.Engine.Input.Model.KeyBinding>
  nameWithType.vb: IEquatable(Of KeyBinding)
  fullName.vb: System.IEquatable(Of Hel.Engine.Input.Model.KeyBinding)
  name.vb: IEquatable(Of KeyBinding)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.Input.Model.KeyBinding
    name: KeyBinding
    nameWithType: KeyBinding
    fullName: Hel.Engine.Input.Model.KeyBinding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.Input.Model.KeyBinding
    name: KeyBinding
    nameWithType: KeyBinding
    fullName: Hel.Engine.Input.Model.KeyBinding
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding.Keys*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.Keys
  name: Keys
  nameWithType: KeyBinding.Keys
  fullName: Hel.Engine.Input.Model.KeyBinding.Keys
- uid: System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys}
  commentId: T:System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Input.Keys}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Keys>
  nameWithType: HashSet<Keys>
  fullName: System.Collections.Generic.HashSet<Microsoft.Xna.Framework.Input.Keys>
  nameWithType.vb: HashSet(Of Keys)
  fullName.vb: System.Collections.Generic.HashSet(Of Microsoft.Xna.Framework.Input.Keys)
  name.vb: HashSet(Of Keys)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    nameWithType: Keys
    fullName: Microsoft.Xna.Framework.Input.Keys
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    nameWithType: Keys
    fullName: Microsoft.Xna.Framework.Input.Keys
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Hel.Engine.Input.Model.KeyBinding.Commands*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.Commands
  name: Commands
  nameWithType: KeyBinding.Commands
  fullName: Hel.Engine.Input.Model.KeyBinding.Commands
- uid: System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand}
  commentId: T:System.Collections.Generic.List{Hel.Engine.Commander.Model.ICommand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ICommand>
  nameWithType: List<ICommand>
  fullName: System.Collections.Generic.List<Hel.Engine.Commander.Model.ICommand>
  nameWithType.vb: List(Of ICommand)
  fullName.vb: System.Collections.Generic.List(Of Hel.Engine.Commander.Model.ICommand)
  name.vb: List(Of ICommand)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.Commander.Model.ICommand
    name: ICommand
    nameWithType: ICommand
    fullName: Hel.Engine.Commander.Model.ICommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.Commander.Model.ICommand
    name: ICommand
    nameWithType: ICommand
    fullName: Hel.Engine.Commander.Model.ICommand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding.#ctor*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.#ctor
  name: KeyBinding
  nameWithType: KeyBinding.KeyBinding
  fullName: Hel.Engine.Input.Model.KeyBinding.KeyBinding
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding.Equals*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.Equals
  name: Equals
  nameWithType: KeyBinding.Equals
  fullName: Hel.Engine.Input.Model.KeyBinding.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Hel.Engine.Input.Model.KeyBinding}.Equals(Hel.Engine.Input.Model.KeyBinding)
  commentId: M:System.IEquatable{Hel.Engine.Input.Model.KeyBinding}.Equals(Hel.Engine.Input.Model.KeyBinding)
  parent: System.IEquatable{Hel.Engine.Input.Model.KeyBinding}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(KeyBinding)
  nameWithType: IEquatable<KeyBinding>.Equals(KeyBinding)
  fullName: System.IEquatable<Hel.Engine.Input.Model.KeyBinding>.Equals(Hel.Engine.Input.Model.KeyBinding)
  nameWithType.vb: IEquatable(Of KeyBinding).Equals(KeyBinding)
  fullName.vb: System.IEquatable(Of Hel.Engine.Input.Model.KeyBinding).Equals(Hel.Engine.Input.Model.KeyBinding)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<KeyBinding>.Equals
    fullName: System.IEquatable<Hel.Engine.Input.Model.KeyBinding>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hel.Engine.Input.Model.KeyBinding
    name: KeyBinding
    nameWithType: KeyBinding
    fullName: Hel.Engine.Input.Model.KeyBinding
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of KeyBinding).Equals
    fullName: System.IEquatable(Of Hel.Engine.Input.Model.KeyBinding).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hel.Engine.Input.Model.KeyBinding
    name: KeyBinding
    nameWithType: KeyBinding
    fullName: Hel.Engine.Input.Model.KeyBinding
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding
  commentId: T:Hel.Engine.Input.Model.KeyBinding
  parent: Hel.Engine.Input.Model
  name: KeyBinding
  nameWithType: KeyBinding
  fullName: Hel.Engine.Input.Model.KeyBinding
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding.GetHashCode*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.GetHashCode
  name: GetHashCode
  nameWithType: KeyBinding.GetHashCode
  fullName: Hel.Engine.Input.Model.KeyBinding.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
