### YamlMime:ManagedReference
items:
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile
  commentId: T:Hel.Tiled.Models.Tileset.Tiles.Tile
  id: Tile
  parent: Hel.Tiled.Models.Tileset.Tiles
  children:
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Animation
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Id
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Image
  - Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight
  - Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth
  - Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Probability
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Properties
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain
  - Hel.Tiled.Models.Tileset.Tiles.Tile.Type
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: Tile
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile
  type: Class
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Tile
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 5
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  syntax:
    content: 'public class Tile : object'
    content.vb: >-
      Public Class Tile
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Id
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Id
  id: Id
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Tile.Id
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Id
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Id
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 10
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nLocal ID of the tile\n"
  example: []
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Animation
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Animation
  id: Animation
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Animation
  nameWithType: Tile.Animation
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Animation
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Animation
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 15
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nFrames for animation\n"
  example: []
  syntax:
    content: public List<Frame> Animation { get; set; }
    parameters: []
    return:
      type: List{Hel.Tiled.Models.Tileset.Tiles.Frame}
    content.vb: Public Property Animation As List(Of Frame)
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Animation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Image
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Image
  id: Image
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: Tile.Image
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Image
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Image
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 20
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nImage representing this tile (optional)\n"
  example: []
  syntax:
    content: public string? Image { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.String}
    content.vb: Public Property Image As String?
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Image*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight
  id: ImageHeight
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: ImageHeight
  nameWithType: Tile.ImageHeight
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: ImageHeight
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 25
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nHeight of the tile image in pixels\n"
  example: []
  syntax:
    content: public ushort ImageHeight { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Property ImageHeight As UShort
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth
  id: ImageWidth
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: ImageWidth
  nameWithType: Tile.ImageWidth
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: ImageWidth
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 30
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nWidth of the tile image in pixels\n"
  example: []
  syntax:
    content: public ushort ImageWidth { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Property ImageWidth As UShort
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup
  id: ObjectGroup
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: ObjectGroup
  nameWithType: Tile.ObjectGroup
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: ObjectGroup
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 35
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nLayer with type objectgroup, when collision shapes are specified (optional)\n"
  example: []
  syntax:
    content: public Layer ObjectGroup { get; set; }
    parameters: []
    return:
      type: Hel.Tiled.Models.Layers.Layer
    content.vb: Public Property ObjectGroup As Layer
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Probability
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Probability
  id: Probability
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: Tile.Probability
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Probability
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Probability
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 40
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nPercentage chance this tile is chosen when competing with others in the editor (optional)\n"
  example: []
  syntax:
    content: public double? Probability { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Probability As Double?
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Probability*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Properties
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Properties
  id: Properties
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: Tile.Properties
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Properties
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Properties
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 45
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  syntax:
    content: public List<Property> Properties { get; set; }
    parameters: []
    return:
      type: List{Hel.Tiled.Models.Property}
    content.vb: Public Property Properties As List(Of  Property)
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain
  id: Terrain
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Terrain
  nameWithType: Tile.Terrain
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Terrain
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 52
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nIndex of terrain for each corner of tile (optional)\neach value is a length-4 array where each element is the index of a terrain on one corner of the tile.\nThe order of indices is: top-left, top-right, bottom-left, bottom-right.\n"
  example: []
  syntax:
    content: public int[] Terrain { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Property Terrain As Integer()
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Type
  commentId: P:Hel.Tiled.Models.Tileset.Tiles.Tile.Type
  id: Type
  parent: Hel.Tiled.Models.Tileset.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Tile.Type
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Type
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tileset/Tiles/Tile.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Type
    path: ../Hel.Tiled/Models/Tileset/Tiles/Tile.cs
    startLine: 57
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tileset.Tiles
  summary: "\nThe type of the tile (optional)\n"
  example: []
  syntax:
    content: public string? Type { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.String}
    content.vb: Public Property Type As String?
  overload: Hel.Tiled.Models.Tileset.Tiles.Tile.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Hel.Tiled.Models.Tileset.Tiles
  commentId: N:Hel.Tiled.Models.Tileset.Tiles
  name: Hel.Tiled.Models.Tileset.Tiles
  nameWithType: Hel.Tiled.Models.Tileset.Tiles
  fullName: Hel.Tiled.Models.Tileset.Tiles
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Id*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Id
  name: Id
  nameWithType: Tile.Id
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Id
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Animation*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Animation
  name: Animation
  nameWithType: Tile.Animation
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Animation
- uid: List{Hel.Tiled.Models.Tileset.Tiles.Frame}
  commentId: '!:List{Hel.Tiled.Models.Tileset.Tiles.Frame}'
  definition: List`1
  name: List<Frame>
  nameWithType: List<Frame>
  fullName: List<Hel.Tiled.Models.Tileset.Tiles.Frame>
  nameWithType.vb: List(Of Frame)
  fullName.vb: List(Of Hel.Tiled.Models.Tileset.Tiles.Frame)
  name.vb: List(Of Frame)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Tileset.Tiles.Frame
    name: Frame
    nameWithType: Frame
    fullName: Hel.Tiled.Models.Tileset.Tiles.Frame
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Tileset.Tiles.Frame
    name: Frame
    nameWithType: Frame
    fullName: Hel.Tiled.Models.Tileset.Tiles.Frame
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Image*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Image
  name: Image
  nameWithType: Tile.Image
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Image
- uid: System.Nullable{System.String}
  commentId: '!:System.Nullable{System.String}'
  definition: System.Nullable`1
  name: Nullable<String>
  nameWithType: Nullable<String>
  fullName: System.Nullable<System.String>
  nameWithType.vb: Nullable(Of String)
  fullName.vb: System.Nullable(Of System.String)
  name.vb: Nullable(Of String)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight
  name: ImageHeight
  nameWithType: Tile.ImageHeight
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageHeight
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth
  name: ImageWidth
  nameWithType: Tile.ImageWidth
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.ImageWidth
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup
  name: ObjectGroup
  nameWithType: Tile.ObjectGroup
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.ObjectGroup
- uid: Hel.Tiled.Models.Layers.Layer
  commentId: T:Hel.Tiled.Models.Layers.Layer
  parent: Hel.Tiled.Models.Layers
  name: Layer
  nameWithType: Layer
  fullName: Hel.Tiled.Models.Layers.Layer
- uid: Hel.Tiled.Models.Layers
  commentId: N:Hel.Tiled.Models.Layers
  name: Hel.Tiled.Models.Layers
  nameWithType: Hel.Tiled.Models.Layers
  fullName: Hel.Tiled.Models.Layers
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Probability*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Probability
  name: Probability
  nameWithType: Tile.Probability
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Probability
- uid: System.Nullable{System.Double}
  commentId: '!:System.Nullable{System.Double}'
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Properties*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Properties
  name: Properties
  nameWithType: Tile.Properties
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Properties
- uid: List{Hel.Tiled.Models.Property}
  commentId: '!:List{Hel.Tiled.Models.Property}'
  definition: List`1
  name: List<Property>
  nameWithType: List<Property>
  fullName: List<Hel.Tiled.Models.Property>
  nameWithType.vb: List(Of Property)
  fullName.vb: List(Of Hel.Tiled.Models.Property)
  name.vb: List(Of Property)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Property
    name: Property
    nameWithType: Property
    fullName: Hel.Tiled.Models.Property
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Property
    name: Property
    nameWithType: Property
    fullName: Hel.Tiled.Models.Property
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain
  name: Terrain
  nameWithType: Tile.Terrain
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Terrain
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hel.Tiled.Models.Tileset.Tiles.Tile.Type*
  commentId: Overload:Hel.Tiled.Models.Tileset.Tiles.Tile.Type
  name: Type
  nameWithType: Tile.Type
  fullName: Hel.Tiled.Models.Tileset.Tiles.Tile.Type
