### YamlMime:ManagedReference
items:
- uid: Hel.Tiled.Models.Tilemap.Tilemap
  commentId: T:Hel.Tiled.Models.Tilemap.Tilemap
  id: Tilemap
  parent: Hel.Tiled.Models.Tilemap
  children:
  - Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor
  - Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel
  - Hel.Tiled.Models.Tilemap.Tilemap.Height
  - Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength
  - Hel.Tiled.Models.Tilemap.Tilemap.Infinite
  - Hel.Tiled.Models.Tilemap.Tilemap.Layers
  - Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId
  - Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId
  - Hel.Tiled.Models.Tilemap.Tilemap.Orientation
  - Hel.Tiled.Models.Tilemap.Tilemap.Properties
  - Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder
  - Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis
  - Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex
  - Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion
  - Hel.Tiled.Models.Tilemap.Tilemap.TileHeight
  - Hel.Tiled.Models.Tilemap.Tilemap.Tilesets
  - Hel.Tiled.Models.Tilemap.Tilemap.TileWidth
  - Hel.Tiled.Models.Tilemap.Tilemap.Type
  - Hel.Tiled.Models.Tilemap.Tilemap.Version
  - Hel.Tiled.Models.Tilemap.Tilemap.Width
  langs:
  - csharp
  - vb
  name: Tilemap
  nameWithType: Tilemap
  fullName: Hel.Tiled.Models.Tilemap.Tilemap
  type: Class
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Tilemap
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 8
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  syntax:
    content: 'public sealed class Tilemap : object'
    content.vb: >-
      Public NotInheritable Class Tilemap
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Height
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Height
  id: Height
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Tilemap.Height
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Height
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Height
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 13
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nNumber of tile rows\n"
  example: []
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Width
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Width
  id: Width
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Tilemap.Width
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Width
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Width
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 18
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nNumber of tile columns\n"
  example: []
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.TileHeight
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.TileHeight
  id: TileHeight
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: TileHeight
  nameWithType: Tilemap.TileHeight
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.TileHeight
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: TileHeight
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 23
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nMap grid height\n"
  example: []
  syntax:
    content: public int TileHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TileHeight As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.TileHeight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.TileWidth
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.TileWidth
  id: TileWidth
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: TileWidth
  nameWithType: Tilemap.TileWidth
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.TileWidth
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: TileWidth
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 28
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nMap grid width\n"
  example: []
  syntax:
    content: public int TileWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TileWidth As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.TileWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Infinite
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Infinite
  id: Infinite
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Infinite
  nameWithType: Tilemap.Infinite
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Infinite
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Infinite
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 33
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nWhether the map has infinite dimensions\n"
  example: []
  syntax:
    content: public bool Infinite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Infinite As Boolean
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Infinite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Tilesets
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Tilesets
  id: Tilesets
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Tilesets
  nameWithType: Tilemap.Tilesets
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Tilesets
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Tilesets
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 38
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nTilesets used in the map\n"
  example: []
  syntax:
    content: public List<Tilemap.TilesetInfo> Tilesets { get; set; }
    parameters: []
    return:
      type: List{Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo}
    content.vb: Public Property Tilesets As List(Of Tilemap.TilesetInfo)
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Tilesets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Layers
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Layers
  id: Layers
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Layers
  nameWithType: Tilemap.Layers
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Layers
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Layers
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 62
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nTilemap layers\n"
  example: []
  syntax:
    content: public List<Layer> Layers { get; set; }
    parameters: []
    return:
      type: List{Hel.Tiled.Models.Layers.Layer}
    content.vb: Public Property Layers As List(Of Layer)
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Layers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Type
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Type
  id: Type
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Tilemap.Type
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Type
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Type
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 67
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nThe type of the tilemap (Only Map since 1.0)\n"
  example: []
  syntax:
    content: public TilemapTypeEnum Type { get; set; }
    parameters: []
    return:
      type: Hel.Tiled.Models.Enums.Tilemap.TilemapTypeEnum
    content.vb: Public Property Type As TilemapTypeEnum
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor
  id: BackgroundColor
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: BackgroundColor
  nameWithType: Tilemap.BackgroundColor
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: BackgroundColor
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 73
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nHex-formatted color (#RRGGBB or #AARRGGBB) (optional)\n"
  example: []
  syntax:
    content: public string BackgroundColor { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BackgroundColor As String
  overload: Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId
  id: NextLayerId
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: NextLayerId
  nameWithType: Tilemap.NextLayerId
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: NextLayerId
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 78
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nThe next gid a layer would have (Current highest id is NextLayerId - 1)\n"
  example: []
  syntax:
    content: public int NextLayerId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NextLayerId As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId
  id: NextObjectId
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: NextObjectId
  nameWithType: Tilemap.NextObjectId
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: NextObjectId
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 83
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nThe next gid an object would have (Current highest id is NextObjectId - 1)\n"
  example: []
  syntax:
    content: public int NextObjectId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NextObjectId As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel
  id: CompressionLevel
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: CompressionLevel
  nameWithType: Tilemap.CompressionLevel
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: CompressionLevel
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 88
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nThe compression level to use for tile layer data (defaults to -1, which means to use the algorithm default)\n"
  example: []
  syntax:
    content: public int CompressionLevel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CompressionLevel As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength
  id: HexSideLength
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: HexSideLength
  nameWithType: Tilemap.HexSideLength
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: HexSideLength
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 93
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nLength of the side of a hex tile in pixels (hexagonal maps only)\n"
  example: []
  syntax:
    content: public int HexSideLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HexSideLength As Integer
  overload: Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Orientation
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Orientation
  id: Orientation
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: Tilemap.Orientation
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Orientation
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Orientation
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 98
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nOrientation of the tilemap\n"
  example: []
  syntax:
    content: public TilemapOrientationEnum Orientation { get; set; }
    parameters: []
    return:
      type: Hel.Tiled.Models.Enums.Tilemap.TilemapOrientationEnum
    content.vb: Public Property Orientation As TilemapOrientationEnum
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Orientation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Properties
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Properties
  id: Properties
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: Tilemap.Properties
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Properties
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Properties
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 104
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nDefined properties\n"
  example: []
  syntax:
    content: public List<Property> Properties { get; set; }
    parameters: []
    return:
      type: List{Hel.Tiled.Models.Property}
    content.vb: Public Property Properties As List(Of  Property)
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion
  id: TiledVersion
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: TiledVersion
  nameWithType: Tilemap.TiledVersion
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: TiledVersion
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 109
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nThe version of tiled that was used to generate the tilemap\n"
  example: []
  syntax:
    content: public string TiledVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TiledVersion As String
  overload: Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Version
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.Version
  id: Version
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Tilemap.Version
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Version
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Version
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 114
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nThe Json/XML format version\n"
  example: []
  syntax:
    content: public float Version { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Version As Single
  overload: Hel.Tiled.Models.Tilemap.Tilemap.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis
  id: StaggerAxis
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: StaggerAxis
  nameWithType: Tilemap.StaggerAxis
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: StaggerAxis
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 119
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nstaggered / hexagonal maps only\n"
  example: []
  syntax:
    content: public TilemapStaggerAxisEnum StaggerAxis { get; set; }
    parameters: []
    return:
      type: Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerAxisEnum
    content.vb: Public Property StaggerAxis As TilemapStaggerAxisEnum
  overload: Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex
  id: StaggerIndex
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: StaggerIndex
  nameWithType: Tilemap.StaggerIndex
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: StaggerIndex
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 125
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nstaggered / hexagonal maps only\n"
  example: []
  syntax:
    content: public TilemapStaggerIndexEnum StaggerIndex { get; set; }
    parameters: []
    return:
      type: Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerIndexEnum
    content.vb: Public Property StaggerIndex As TilemapStaggerIndexEnum
  overload: Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder
  commentId: P:Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder
  id: RenderOrder
  parent: Hel.Tiled.Models.Tilemap.Tilemap
  langs:
  - csharp
  - vb
  name: RenderOrder
  nameWithType: Tilemap.RenderOrder
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder
  type: Property
  source:
    remote:
      path: Hel.Tiled/Models/Tilemap/Tilemap.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: RenderOrder
    path: ../Hel.Tiled/Models/Tilemap/Tilemap.cs
    startLine: 131
  assemblies:
  - Hel.Tiled
  namespace: Hel.Tiled.Models.Tilemap
  summary: "\nOnly for orthogonal maps\n"
  example: []
  syntax:
    content: public TilemapRenderOrderEnum RenderOrder { get; set; }
    parameters: []
    return:
      type: Hel.Tiled.Models.Enums.Tilemap.TilemapRenderOrderEnum
    content.vb: Public Property RenderOrder As TilemapRenderOrderEnum
  overload: Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Hel.Tiled.Models.Tilemap
  commentId: N:Hel.Tiled.Models.Tilemap
  name: Hel.Tiled.Models.Tilemap
  nameWithType: Hel.Tiled.Models.Tilemap
  fullName: Hel.Tiled.Models.Tilemap
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Height*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Height
  name: Height
  nameWithType: Tilemap.Height
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Height
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Width*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Width
  name: Width
  nameWithType: Tilemap.Width
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Width
- uid: Hel.Tiled.Models.Tilemap.Tilemap.TileHeight*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.TileHeight
  name: TileHeight
  nameWithType: Tilemap.TileHeight
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.TileHeight
- uid: Hel.Tiled.Models.Tilemap.Tilemap.TileWidth*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.TileWidth
  name: TileWidth
  nameWithType: Tilemap.TileWidth
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.TileWidth
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Infinite*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Infinite
  name: Infinite
  nameWithType: Tilemap.Infinite
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Infinite
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Tilesets*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Tilesets
  name: Tilesets
  nameWithType: Tilemap.Tilesets
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Tilesets
- uid: List{Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo}
  commentId: '!:List{Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo}'
  definition: List`1
  name: List<Tilemap.TilesetInfo>
  nameWithType: List<Tilemap.TilesetInfo>
  fullName: List<Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo>
  nameWithType.vb: List(Of Tilemap.TilesetInfo)
  fullName.vb: List(Of Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo)
  name.vb: List(Of Tilemap.TilesetInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo
    name: Tilemap.TilesetInfo
    nameWithType: Tilemap.TilesetInfo
    fullName: Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo
    name: Tilemap.TilesetInfo
    nameWithType: Tilemap.TilesetInfo
    fullName: Hel.Tiled.Models.Tilemap.Tilemap.TilesetInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Layers*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Layers
  name: Layers
  nameWithType: Tilemap.Layers
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Layers
- uid: List{Hel.Tiled.Models.Layers.Layer}
  commentId: '!:List{Hel.Tiled.Models.Layers.Layer}'
  definition: List`1
  name: List<Layer>
  nameWithType: List<Layer>
  fullName: List<Hel.Tiled.Models.Layers.Layer>
  nameWithType.vb: List(Of Layer)
  fullName.vb: List(Of Hel.Tiled.Models.Layers.Layer)
  name.vb: List(Of Layer)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Layers.Layer
    name: Layer
    nameWithType: Layer
    fullName: Hel.Tiled.Models.Layers.Layer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Layers.Layer
    name: Layer
    nameWithType: Layer
    fullName: Hel.Tiled.Models.Layers.Layer
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Type*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Type
  name: Type
  nameWithType: Tilemap.Type
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Type
- uid: Hel.Tiled.Models.Enums.Tilemap.TilemapTypeEnum
  commentId: T:Hel.Tiled.Models.Enums.Tilemap.TilemapTypeEnum
  parent: Hel.Tiled.Models.Enums.Tilemap
  name: TilemapTypeEnum
  nameWithType: TilemapTypeEnum
  fullName: Hel.Tiled.Models.Enums.Tilemap.TilemapTypeEnum
- uid: Hel.Tiled.Models.Enums.Tilemap
  commentId: N:Hel.Tiled.Models.Enums.Tilemap
  name: Hel.Tiled.Models.Enums.Tilemap
  nameWithType: Hel.Tiled.Models.Enums.Tilemap
  fullName: Hel.Tiled.Models.Enums.Tilemap
- uid: Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor
  name: BackgroundColor
  nameWithType: Tilemap.BackgroundColor
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.BackgroundColor
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId
  name: NextLayerId
  nameWithType: Tilemap.NextLayerId
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.NextLayerId
- uid: Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId
  name: NextObjectId
  nameWithType: Tilemap.NextObjectId
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.NextObjectId
- uid: Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel
  name: CompressionLevel
  nameWithType: Tilemap.CompressionLevel
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.CompressionLevel
- uid: Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength
  name: HexSideLength
  nameWithType: Tilemap.HexSideLength
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.HexSideLength
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Orientation*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Orientation
  name: Orientation
  nameWithType: Tilemap.Orientation
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Orientation
- uid: Hel.Tiled.Models.Enums.Tilemap.TilemapOrientationEnum
  commentId: T:Hel.Tiled.Models.Enums.Tilemap.TilemapOrientationEnum
  parent: Hel.Tiled.Models.Enums.Tilemap
  name: TilemapOrientationEnum
  nameWithType: TilemapOrientationEnum
  fullName: Hel.Tiled.Models.Enums.Tilemap.TilemapOrientationEnum
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Properties*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Properties
  name: Properties
  nameWithType: Tilemap.Properties
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Properties
- uid: List{Hel.Tiled.Models.Property}
  commentId: '!:List{Hel.Tiled.Models.Property}'
  definition: List`1
  name: List<Property>
  nameWithType: List<Property>
  fullName: List<Hel.Tiled.Models.Property>
  nameWithType.vb: List(Of Property)
  fullName.vb: List(Of Hel.Tiled.Models.Property)
  name.vb: List(Of Property)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Tiled.Models.Property
    name: Property
    nameWithType: Property
    fullName: Hel.Tiled.Models.Property
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Tiled.Models.Property
    name: Property
    nameWithType: Property
    fullName: Hel.Tiled.Models.Property
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion
  name: TiledVersion
  nameWithType: Tilemap.TiledVersion
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.TiledVersion
- uid: Hel.Tiled.Models.Tilemap.Tilemap.Version*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.Version
  name: Version
  nameWithType: Tilemap.Version
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.Version
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis
  name: StaggerAxis
  nameWithType: Tilemap.StaggerAxis
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.StaggerAxis
- uid: Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerAxisEnum
  commentId: T:Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerAxisEnum
  parent: Hel.Tiled.Models.Enums.Tilemap
  name: TilemapStaggerAxisEnum
  nameWithType: TilemapStaggerAxisEnum
  fullName: Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerAxisEnum
- uid: Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex
  name: StaggerIndex
  nameWithType: Tilemap.StaggerIndex
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.StaggerIndex
- uid: Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerIndexEnum
  commentId: T:Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerIndexEnum
  parent: Hel.Tiled.Models.Enums.Tilemap
  name: TilemapStaggerIndexEnum
  nameWithType: TilemapStaggerIndexEnum
  fullName: Hel.Tiled.Models.Enums.Tilemap.TilemapStaggerIndexEnum
- uid: Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder*
  commentId: Overload:Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder
  name: RenderOrder
  nameWithType: Tilemap.RenderOrder
  fullName: Hel.Tiled.Models.Tilemap.Tilemap.RenderOrder
- uid: Hel.Tiled.Models.Enums.Tilemap.TilemapRenderOrderEnum
  commentId: T:Hel.Tiled.Models.Enums.Tilemap.TilemapRenderOrderEnum
  parent: Hel.Tiled.Models.Enums.Tilemap
  name: TilemapRenderOrderEnum
  nameWithType: TilemapRenderOrderEnum
  fullName: Hel.Tiled.Models.Enums.Tilemap.TilemapRenderOrderEnum
