### YamlMime:ManagedReference
items:
- uid: Hel.Engine.Input.Model.KeyBinding
  commentId: T:Hel.Engine.Input.Model.KeyBinding
  id: KeyBinding
  parent: Hel.Engine.Input.Model
  children:
  - Hel.Engine.Input.Model.KeyBinding.#ctor(HashSet{Keys},List{Hel.Engine.Commander.Model.ICommand})
  - Hel.Engine.Input.Model.KeyBinding.Commands
  - Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  - Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  - Hel.Engine.Input.Model.KeyBinding.GetHashCode
  - Hel.Engine.Input.Model.KeyBinding.Keys
  langs:
  - csharp
  - vb
  name: KeyBinding
  nameWithType: KeyBinding
  fullName: Hel.Engine.Input.Model.KeyBinding
  type: Class
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: KeyBinding
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 7
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: 'public class KeyBinding : IEquatable<KeyBinding>'
    content.vb: >-
      Public Class KeyBinding
          Inherits IEquatable(Of KeyBinding)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.Input.Model.KeyBinding.Keys
  commentId: P:Hel.Engine.Input.Model.KeyBinding.Keys
  id: Keys
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: KeyBinding.Keys
  fullName: Hel.Engine.Input.Model.KeyBinding.Keys
  type: Property
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Keys
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 10
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public HashSet<Keys> Keys { get; }
    parameters: []
    return:
      type: HashSet{Keys}
    content.vb: Public ReadOnly Property Keys As HashSet(Of Keys)
  overload: Hel.Engine.Input.Model.KeyBinding.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hel.Engine.Input.Model.KeyBinding.Commands
  commentId: P:Hel.Engine.Input.Model.KeyBinding.Commands
  id: Commands
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Commands
  nameWithType: KeyBinding.Commands
  fullName: Hel.Engine.Input.Model.KeyBinding.Commands
  type: Property
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Commands
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 11
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public List<ICommand> Commands { get; set; }
    parameters: []
    return:
      type: List{Hel.Engine.Commander.Model.ICommand}
    content.vb: Public Property Commands As List(Of ICommand)
  overload: Hel.Engine.Input.Model.KeyBinding.Commands*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Hel.Engine.Input.Model.KeyBinding.#ctor(HashSet{Keys},List{Hel.Engine.Commander.Model.ICommand})
  commentId: M:Hel.Engine.Input.Model.KeyBinding.#ctor(HashSet{Keys},List{Hel.Engine.Commander.Model.ICommand})
  id: '#ctor(HashSet{Keys},List{Hel.Engine.Commander.Model.ICommand})'
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: KeyBinding(HashSet<Keys>, List<ICommand>)
  nameWithType: KeyBinding.KeyBinding(HashSet<Keys>, List<ICommand>)
  fullName: Hel.Engine.Input.Model.KeyBinding.KeyBinding(HashSet<Keys>, List<Hel.Engine.Commander.Model.ICommand>)
  type: Constructor
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: .ctor
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 13
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public KeyBinding(HashSet<Keys> keys, List<ICommand> commands)
    parameters:
    - id: keys
      type: HashSet{Keys}
    - id: commands
      type: List{Hel.Engine.Commander.Model.ICommand}
    content.vb: Public Sub New(keys As HashSet(Of Keys), commands As List(Of ICommand))
  overload: Hel.Engine.Input.Model.KeyBinding.#ctor*
  nameWithType.vb: KeyBinding.KeyBinding(HashSet(Of Keys), List(Of ICommand))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.Input.Model.KeyBinding.KeyBinding(HashSet(Of Keys), List(Of Hel.Engine.Commander.Model.ICommand))
  name.vb: KeyBinding(HashSet(Of Keys), List(Of ICommand))
- uid: Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  commentId: M:Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  id: Equals(System.Object)
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: KeyBinding.Equals(Object)
  fullName: Hel.Engine.Input.Model.KeyBinding.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Equals
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 19
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Hel.Engine.Input.Model.KeyBinding.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  commentId: M:Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  id: Equals(Hel.Engine.Input.Model.KeyBinding)
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: Equals(KeyBinding)
  nameWithType: KeyBinding.Equals(KeyBinding)
  fullName: Hel.Engine.Input.Model.KeyBinding.Equals(Hel.Engine.Input.Model.KeyBinding)
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Equals
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 26
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public bool Equals(KeyBinding other)
    parameters:
    - id: other
      type: Hel.Engine.Input.Model.KeyBinding
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As KeyBinding) As Boolean
  overload: Hel.Engine.Input.Model.KeyBinding.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.Input.Model.KeyBinding.GetHashCode
  commentId: M:Hel.Engine.Input.Model.KeyBinding.GetHashCode
  id: GetHashCode
  parent: Hel.Engine.Input.Model.KeyBinding
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: KeyBinding.GetHashCode()
  fullName: Hel.Engine.Input.Model.KeyBinding.GetHashCode()
  type: Method
  source:
    remote:
      path: Hel.Engine/Input/Model/KeyBinding.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: GetHashCode
    path: ../Hel.Engine/Input/Model/KeyBinding.cs
    startLine: 29
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Input.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Hel.Engine.Input.Model.KeyBinding.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Hel.Engine.Input.Model
  commentId: N:Hel.Engine.Input.Model
  name: Hel.Engine.Input.Model
  nameWithType: Hel.Engine.Input.Model
  fullName: Hel.Engine.Input.Model
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Engine.Input.Model.KeyBinding.Keys*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.Keys
  name: Keys
  nameWithType: KeyBinding.Keys
  fullName: Hel.Engine.Input.Model.KeyBinding.Keys
- uid: HashSet{Keys}
  commentId: '!:HashSet{Keys}'
  definition: HashSet`1
  name: HashSet<Keys>
  nameWithType: HashSet<Keys>
  fullName: HashSet<Keys>
  nameWithType.vb: HashSet(Of Keys)
  fullName.vb: HashSet(Of Keys)
  name.vb: HashSet(Of Keys)
  spec.csharp:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Keys
    name: Keys
    nameWithType: Keys
    fullName: Keys
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Keys
    name: Keys
    nameWithType: Keys
    fullName: Keys
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding.Commands*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.Commands
  name: Commands
  nameWithType: KeyBinding.Commands
  fullName: Hel.Engine.Input.Model.KeyBinding.Commands
- uid: List{Hel.Engine.Commander.Model.ICommand}
  commentId: '!:List{Hel.Engine.Commander.Model.ICommand}'
  definition: List`1
  name: List<ICommand>
  nameWithType: List<ICommand>
  fullName: List<Hel.Engine.Commander.Model.ICommand>
  nameWithType.vb: List(Of ICommand)
  fullName.vb: List(Of Hel.Engine.Commander.Model.ICommand)
  name.vb: List(Of ICommand)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.Commander.Model.ICommand
    name: ICommand
    nameWithType: ICommand
    fullName: Hel.Engine.Commander.Model.ICommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.Commander.Model.ICommand
    name: ICommand
    nameWithType: ICommand
    fullName: Hel.Engine.Commander.Model.ICommand
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Input.Model.KeyBinding.#ctor*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.#ctor
  name: KeyBinding
  nameWithType: KeyBinding.KeyBinding
  fullName: Hel.Engine.Input.Model.KeyBinding.KeyBinding
- uid: Hel.Engine.Input.Model.KeyBinding.Equals*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.Equals
  name: Equals
  nameWithType: KeyBinding.Equals
  fullName: Hel.Engine.Input.Model.KeyBinding.Equals
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Hel.Engine.Input.Model.KeyBinding
  commentId: T:Hel.Engine.Input.Model.KeyBinding
  parent: Hel.Engine.Input.Model
  name: KeyBinding
  nameWithType: KeyBinding
  fullName: Hel.Engine.Input.Model.KeyBinding
- uid: Hel.Engine.Input.Model.KeyBinding.GetHashCode*
  commentId: Overload:Hel.Engine.Input.Model.KeyBinding.GetHashCode
  name: GetHashCode
  nameWithType: KeyBinding.GetHashCode
  fullName: Hel.Engine.Input.Model.KeyBinding.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
