### YamlMime:ManagedReference
items:
- uid: Hel.Engine.Commander.Model.ICommand`1
  commentId: T:Hel.Engine.Commander.Model.ICommand`1
  id: ICommand`1
  parent: Hel.Engine.Commander.Model
  children:
  - Hel.Engine.Commander.Model.ICommand`1.Payload
  langs:
  - csharp
  - vb
  name: ICommand<T>
  nameWithType: ICommand<T>
  fullName: Hel.Engine.Commander.Model.ICommand<T>
  type: Interface
  source:
    remote:
      path: Hel.Engine/Commander/Model/ICommand.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: ICommand
    path: ../Hel.Engine/Commander/Model/ICommand.cs
    startLine: 17
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Commander.Model
  syntax:
    content: 'public interface ICommand<T> : ICommand'
    typeParameters:
    - id: T
    content.vb: >-
      Public Interface ICommand(Of T)
          Inherits ICommand
  inheritedMembers:
  - Hel.Engine.Commander.Model.ICommand.Execute
  - Hel.Engine.Commander.Model.ICommand.Undo
  nameWithType.vb: ICommand(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Hel.Engine.Commander.Model.ICommand(Of T)
  name.vb: ICommand(Of T)
- uid: Hel.Engine.Commander.Model.ICommand`1.Payload
  commentId: P:Hel.Engine.Commander.Model.ICommand`1.Payload
  id: Payload
  parent: Hel.Engine.Commander.Model.ICommand`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: ICommand<T>.Payload
  fullName: Hel.Engine.Commander.Model.ICommand<T>.Payload
  type: Property
  source:
    remote:
      path: Hel.Engine/Commander/Model/ICommand.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Payload
    path: ../Hel.Engine/Commander/Model/ICommand.cs
    startLine: 19
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Commander.Model
  syntax:
    content: T Payload { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Property Payload As T
  overload: Hel.Engine.Commander.Model.ICommand`1.Payload*
  nameWithType.vb: ICommand(Of T).Payload
  modifiers.csharp:
  - get
  - set
  fullName.vb: Hel.Engine.Commander.Model.ICommand(Of T).Payload
references:
- uid: Hel.Engine.Commander.Model
  commentId: N:Hel.Engine.Commander.Model
  name: Hel.Engine.Commander.Model
  nameWithType: Hel.Engine.Commander.Model
  fullName: Hel.Engine.Commander.Model
- uid: Hel.Engine.Commander.Model.ICommand.Execute
  commentId: M:Hel.Engine.Commander.Model.ICommand.Execute
  parent: Hel.Engine.Commander.Model.ICommand
  name: Execute()
  nameWithType: ICommand.Execute()
  fullName: Hel.Engine.Commander.Model.ICommand.Execute()
  spec.csharp:
  - uid: Hel.Engine.Commander.Model.ICommand.Execute
    name: Execute
    nameWithType: ICommand.Execute
    fullName: Hel.Engine.Commander.Model.ICommand.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.Commander.Model.ICommand.Execute
    name: Execute
    nameWithType: ICommand.Execute
    fullName: Hel.Engine.Commander.Model.ICommand.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Commander.Model.ICommand.Undo
  commentId: M:Hel.Engine.Commander.Model.ICommand.Undo
  parent: Hel.Engine.Commander.Model.ICommand
  name: Undo()
  nameWithType: ICommand.Undo()
  fullName: Hel.Engine.Commander.Model.ICommand.Undo()
  spec.csharp:
  - uid: Hel.Engine.Commander.Model.ICommand.Undo
    name: Undo
    nameWithType: ICommand.Undo
    fullName: Hel.Engine.Commander.Model.ICommand.Undo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hel.Engine.Commander.Model.ICommand.Undo
    name: Undo
    nameWithType: ICommand.Undo
    fullName: Hel.Engine.Commander.Model.ICommand.Undo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Commander.Model.ICommand
  commentId: T:Hel.Engine.Commander.Model.ICommand
  parent: Hel.Engine.Commander.Model
  name: ICommand
  nameWithType: ICommand
  fullName: Hel.Engine.Commander.Model.ICommand
- uid: Hel.Engine.Commander.Model.ICommand`1.Payload*
  commentId: Overload:Hel.Engine.Commander.Model.ICommand`1.Payload
  name: Payload
  nameWithType: ICommand<T>.Payload
  fullName: Hel.Engine.Commander.Model.ICommand<T>.Payload
  nameWithType.vb: ICommand(Of T).Payload
  fullName.vb: Hel.Engine.Commander.Model.ICommand(Of T).Payload
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
