### YamlMime:ManagedReference
items:
- uid: Hel.Engine.Jobs.Model.IJob`1
  commentId: T:Hel.Engine.Jobs.Model.IJob`1
  id: IJob`1
  parent: Hel.Engine.Jobs.Model
  children:
  - Hel.Engine.Jobs.Model.IJob`1.GetData
  - Hel.Engine.Jobs.Model.IJob`1.Key
  - Hel.Engine.Jobs.Model.IJob`1.QueueJobThread
  - Hel.Engine.Jobs.Model.IJob`1.Run(`0)
  langs:
  - csharp
  - vb
  name: IJob<T>
  nameWithType: IJob<T>
  fullName: Hel.Engine.Jobs.Model.IJob<T>
  type: Interface
  source:
    remote:
      path: Hel.Engine/Jobs/Model/IJob.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: IJob
    path: ../Hel.Engine/Jobs/Model/IJob.cs
    startLine: 2
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Jobs.Model
  syntax:
    content: public interface IJob<T>
    typeParameters:
    - id: T
    content.vb: Public Interface IJob(Of T)
  nameWithType.vb: IJob(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T)
  name.vb: IJob(Of T)
- uid: Hel.Engine.Jobs.Model.IJob`1.Key
  commentId: P:Hel.Engine.Jobs.Model.IJob`1.Key
  id: Key
  parent: Hel.Engine.Jobs.Model.IJob`1
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: IJob<T>.Key
  fullName: Hel.Engine.Jobs.Model.IJob<T>.Key
  type: Property
  source:
    remote:
      path: Hel.Engine/Jobs/Model/IJob.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Key
    path: ../Hel.Engine/Jobs/Model/IJob.cs
    startLine: 8
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Jobs.Model
  summary: "\nThe key that represents the job. Should properly represent the functionality \nof the job to ensure multiple jobs with the same function dont run. \n"
  example: []
  syntax:
    content: string Key { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Key As String
  overload: Hel.Engine.Jobs.Model.IJob`1.Key*
  nameWithType.vb: IJob(Of T).Key
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).Key
- uid: Hel.Engine.Jobs.Model.IJob`1.QueueJobThread
  commentId: M:Hel.Engine.Jobs.Model.IJob`1.QueueJobThread
  id: QueueJobThread
  parent: Hel.Engine.Jobs.Model.IJob`1
  langs:
  - csharp
  - vb
  name: QueueJobThread()
  nameWithType: IJob<T>.QueueJobThread()
  fullName: Hel.Engine.Jobs.Model.IJob<T>.QueueJobThread()
  type: Method
  source:
    remote:
      path: Hel.Engine/Jobs/Model/IJob.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: QueueJobThread
    path: ../Hel.Engine/Jobs/Model/IJob.cs
    startLine: 13
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Jobs.Model
  summary: "\nQueues the job to be run whenever a thread is available.\n"
  example: []
  syntax:
    content: void QueueJobThread()
    content.vb: Sub QueueJobThread
  overload: Hel.Engine.Jobs.Model.IJob`1.QueueJobThread*
  nameWithType.vb: IJob(Of T).QueueJobThread()
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).QueueJobThread()
- uid: Hel.Engine.Jobs.Model.IJob`1.GetData
  commentId: M:Hel.Engine.Jobs.Model.IJob`1.GetData
  id: GetData
  parent: Hel.Engine.Jobs.Model.IJob`1
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: IJob<T>.GetData()
  fullName: Hel.Engine.Jobs.Model.IJob<T>.GetData()
  type: Method
  source:
    remote:
      path: Hel.Engine/Jobs/Model/IJob.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: GetData
    path: ../Hel.Engine/Jobs/Model/IJob.cs
    startLine: 19
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Jobs.Model
  summary: "\nReturns the data that the job utilizes.\n"
  example: []
  syntax:
    content: T GetData()
    return:
      type: '{T}'
      description: ''
    content.vb: Function GetData As T
  overload: Hel.Engine.Jobs.Model.IJob`1.GetData*
  nameWithType.vb: IJob(Of T).GetData()
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).GetData()
- uid: Hel.Engine.Jobs.Model.IJob`1.Run(`0)
  commentId: M:Hel.Engine.Jobs.Model.IJob`1.Run(`0)
  id: Run(`0)
  parent: Hel.Engine.Jobs.Model.IJob`1
  langs:
  - csharp
  - vb
  name: Run(T)
  nameWithType: IJob<T>.Run(T)
  fullName: Hel.Engine.Jobs.Model.IJob<T>.Run(T)
  type: Method
  source:
    remote:
      path: Hel.Engine/Jobs/Model/IJob.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Run
    path: ../Hel.Engine/Jobs/Model/IJob.cs
    startLine: 25
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.Jobs.Model
  summary: "\nRuns the job logic specified on creation. \n"
  example: []
  syntax:
    content: void Run(T data)
    parameters:
    - id: data
      type: '{T}'
    content.vb: Sub Run(data As T)
  overload: Hel.Engine.Jobs.Model.IJob`1.Run*
  nameWithType.vb: IJob(Of T).Run(T)
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).Run(T)
references:
- uid: Hel.Engine.Jobs.Model
  commentId: N:Hel.Engine.Jobs.Model
  name: Hel.Engine.Jobs.Model
  nameWithType: Hel.Engine.Jobs.Model
  fullName: Hel.Engine.Jobs.Model
- uid: Hel.Engine.Jobs.Model.IJob`1.Key*
  commentId: Overload:Hel.Engine.Jobs.Model.IJob`1.Key
  name: Key
  nameWithType: IJob<T>.Key
  fullName: Hel.Engine.Jobs.Model.IJob<T>.Key
  nameWithType.vb: IJob(Of T).Key
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).Key
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hel.Engine.Jobs.Model.IJob`1.QueueJobThread*
  commentId: Overload:Hel.Engine.Jobs.Model.IJob`1.QueueJobThread
  name: QueueJobThread
  nameWithType: IJob<T>.QueueJobThread
  fullName: Hel.Engine.Jobs.Model.IJob<T>.QueueJobThread
  nameWithType.vb: IJob(Of T).QueueJobThread
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).QueueJobThread
- uid: Hel.Engine.Jobs.Model.IJob`1.GetData*
  commentId: Overload:Hel.Engine.Jobs.Model.IJob`1.GetData
  name: GetData
  nameWithType: IJob<T>.GetData
  fullName: Hel.Engine.Jobs.Model.IJob<T>.GetData
  nameWithType.vb: IJob(Of T).GetData
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).GetData
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Hel.Engine.Jobs.Model.IJob`1.Run*
  commentId: Overload:Hel.Engine.Jobs.Model.IJob`1.Run
  name: Run
  nameWithType: IJob<T>.Run
  fullName: Hel.Engine.Jobs.Model.IJob<T>.Run
  nameWithType.vb: IJob(Of T).Run
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T).Run
