### YamlMime:ManagedReference
items:
- uid: Hel.Engine.ECS.Entities.IEntity
  commentId: T:Hel.Engine.ECS.Entities.IEntity
  id: IEntity
  parent: Hel.Engine.ECS.Entities
  children:
  - Hel.Engine.ECS.Entities.IEntity.AddComponent(Hel.Engine.ECS.Components.IComponent)
  - Hel.Engine.ECS.Entities.IEntity.AddComponents(List{Hel.Engine.ECS.Components.IComponent})
  - Hel.Engine.ECS.Entities.IEntity.Components
  langs:
  - csharp
  - vb
  name: IEntity
  nameWithType: IEntity
  fullName: Hel.Engine.ECS.Entities.IEntity
  type: Interface
  source:
    remote:
      path: Hel.Engine/ECS/Entities/Entity.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: IEntity
    path: ../Hel.Engine/ECS/Entities/Entity.cs
    startLine: 11
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  summary: "\nIEntity is the base component all entities need to use. \nThe entire ECS system uses the IEntity interface to store, remove\nand send entities to their respective systems. \nThese entities are not stored as objects but rather deconstructed into an ID and a list of _components.\n"
  example: []
  syntax:
    content: public interface IEntity
    content.vb: Public Interface IEntity
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Hel.Engine.ECS.Entities.IEntity.Components
  commentId: P:Hel.Engine.ECS.Entities.IEntity.Components
  id: Components
  parent: Hel.Engine.ECS.Entities.IEntity
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: IEntity.Components
  fullName: Hel.Engine.ECS.Entities.IEntity.Components
  type: Property
  source:
    remote:
      path: Hel.Engine/ECS/Entities/Entity.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: Components
    path: ../Hel.Engine/ECS/Entities/Entity.cs
    startLine: 16
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  summary: "\nList of _components that will be assigned in the EntityManager\n"
  example: []
  syntax:
    content: ComponentDictionary Components { get; }
    parameters: []
    return:
      type: Hel.Engine.ECS.Components.ComponentDictionary
    content.vb: ReadOnly Property Components As ComponentDictionary
  overload: Hel.Engine.ECS.Entities.IEntity.Components*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Hel.Engine.ECS.Entities.IEntity.AddComponent(Hel.Engine.ECS.Components.IComponent)
  commentId: M:Hel.Engine.ECS.Entities.IEntity.AddComponent(Hel.Engine.ECS.Components.IComponent)
  id: AddComponent(Hel.Engine.ECS.Components.IComponent)
  parent: Hel.Engine.ECS.Entities.IEntity
  langs:
  - csharp
  - vb
  name: AddComponent(IComponent)
  nameWithType: IEntity.AddComponent(IComponent)
  fullName: Hel.Engine.ECS.Entities.IEntity.AddComponent(Hel.Engine.ECS.Components.IComponent)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/Entity.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: AddComponent
    path: ../Hel.Engine/ECS/Entities/Entity.cs
    startLine: 22
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  summary: "\nAdd a component to the entities component list. This list of _components is then added to the new entity in the manager.\n"
  example: []
  syntax:
    content: void AddComponent(IComponent component)
    parameters:
    - id: component
      type: Hel.Engine.ECS.Components.IComponent
      description: ''
    content.vb: Sub AddComponent(component As IComponent)
  overload: Hel.Engine.ECS.Entities.IEntity.AddComponent*
- uid: Hel.Engine.ECS.Entities.IEntity.AddComponents(List{Hel.Engine.ECS.Components.IComponent})
  commentId: M:Hel.Engine.ECS.Entities.IEntity.AddComponents(List{Hel.Engine.ECS.Components.IComponent})
  id: AddComponents(List{Hel.Engine.ECS.Components.IComponent})
  parent: Hel.Engine.ECS.Entities.IEntity
  langs:
  - csharp
  - vb
  name: AddComponents(List<IComponent>)
  nameWithType: IEntity.AddComponents(List<IComponent>)
  fullName: Hel.Engine.ECS.Entities.IEntity.AddComponents(List<Hel.Engine.ECS.Components.IComponent>)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Entities/Entity.cs
      branch: b7c5027e19603975b19db1b70027c0ebf07977a0
      repo: https://github.com/GriMmzlyTM/Hel
    id: AddComponents
    path: ../Hel.Engine/ECS/Entities/Entity.cs
    startLine: 28
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Entities
  summary: "\nAdd a list of _components to the entities component list. This list of _components is then added to the new entity in the manager.\n"
  example: []
  syntax:
    content: void AddComponents(List<IComponent> componentList)
    parameters:
    - id: componentList
      type: List{Hel.Engine.ECS.Components.IComponent}
      description: ''
    content.vb: Sub AddComponents(componentList As List(Of IComponent))
  overload: Hel.Engine.ECS.Entities.IEntity.AddComponents*
  nameWithType.vb: IEntity.AddComponents(List(Of IComponent))
  fullName.vb: Hel.Engine.ECS.Entities.IEntity.AddComponents(List(Of Hel.Engine.ECS.Components.IComponent))
  name.vb: AddComponents(List(Of IComponent))
references:
- uid: Hel.Engine.ECS.Entities
  commentId: N:Hel.Engine.ECS.Entities
  name: Hel.Engine.ECS.Entities
  nameWithType: Hel.Engine.ECS.Entities
  fullName: Hel.Engine.ECS.Entities
- uid: Hel.Engine.ECS.Entities.IEntity.Components*
  commentId: Overload:Hel.Engine.ECS.Entities.IEntity.Components
  name: Components
  nameWithType: IEntity.Components
  fullName: Hel.Engine.ECS.Entities.IEntity.Components
- uid: Hel.Engine.ECS.Components.ComponentDictionary
  commentId: T:Hel.Engine.ECS.Components.ComponentDictionary
  parent: Hel.Engine.ECS.Components
  name: ComponentDictionary
  nameWithType: ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary
- uid: Hel.Engine.ECS.Components
  commentId: N:Hel.Engine.ECS.Components
  name: Hel.Engine.ECS.Components
  nameWithType: Hel.Engine.ECS.Components
  fullName: Hel.Engine.ECS.Components
- uid: Hel.Engine.ECS.Entities.IEntity.AddComponent*
  commentId: Overload:Hel.Engine.ECS.Entities.IEntity.AddComponent
  name: AddComponent
  nameWithType: IEntity.AddComponent
  fullName: Hel.Engine.ECS.Entities.IEntity.AddComponent
- uid: Hel.Engine.ECS.Components.IComponent
  commentId: T:Hel.Engine.ECS.Components.IComponent
  parent: Hel.Engine.ECS.Components
  name: IComponent
  nameWithType: IComponent
  fullName: Hel.Engine.ECS.Components.IComponent
- uid: Hel.Engine.ECS.Entities.IEntity.AddComponents*
  commentId: Overload:Hel.Engine.ECS.Entities.IEntity.AddComponents
  name: AddComponents
  nameWithType: IEntity.AddComponents
  fullName: Hel.Engine.ECS.Entities.IEntity.AddComponents
- uid: List{Hel.Engine.ECS.Components.IComponent}
  commentId: '!:List{Hel.Engine.ECS.Components.IComponent}'
  definition: List`1
  name: List<IComponent>
  nameWithType: List<IComponent>
  fullName: List<Hel.Engine.ECS.Components.IComponent>
  nameWithType.vb: List(Of IComponent)
  fullName.vb: List(Of Hel.Engine.ECS.Components.IComponent)
  name.vb: List(Of IComponent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
