### YamlMime:ManagedReference
items:
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler
  commentId: T:Hel.Engine.ECS.Jobs.EntityJobScheduler
  id: EntityJobScheduler
  parent: Hel.Engine.ECS.Jobs
  children:
  - Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs
  - Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs
  - Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob(Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary})
  langs:
  - csharp
  - vb
  name: EntityJobScheduler
  nameWithType: EntityJobScheduler
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler
  type: Class
  source:
    remote:
      path: Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: EntityJobScheduler
    path: ../Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
    startLine: 8
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Jobs
  syntax:
    content: 'public class EntityJobScheduler : object'
    content.vb: >-
      Public Class EntityJobScheduler
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob(Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary})
  commentId: M:Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob(Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary})
  id: ScheduleJob(Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary})
  parent: Hel.Engine.ECS.Jobs.EntityJobScheduler
  langs:
  - csharp
  - vb
  name: ScheduleJob(IJob<EntityDictionary>)
  nameWithType: EntityJobScheduler.ScheduleJob(IJob<EntityDictionary>)
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob(Hel.Engine.Jobs.Model.IJob<Hel.Engine.ECS.Entities.EntityDictionary>)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: ScheduleJob
    path: ../Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
    startLine: 17
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Jobs
  summary: "\nTries to queue the job if not already queued. \nThrows JobAlreadyQueuedException \n"
  example: []
  syntax:
    content: public static void ScheduleJob(IJob<EntityDictionary> job)
    parameters:
    - id: job
      type: Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary}
      description: The job you wish to queue
    content.vb: Public Shared Sub ScheduleJob(job As IJob(Of EntityDictionary))
  overload: Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob*
  nameWithType.vb: EntityJobScheduler.ScheduleJob(IJob(Of EntityDictionary))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob(Hel.Engine.Jobs.Model.IJob(Of Hel.Engine.ECS.Entities.EntityDictionary))
  name.vb: ScheduleJob(IJob(Of EntityDictionary))
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs
  commentId: M:Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs
  id: GetJobs
  parent: Hel.Engine.ECS.Jobs.EntityJobScheduler
  langs:
  - csharp
  - vb
  name: GetJobs()
  nameWithType: EntityJobScheduler.GetJobs()
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: GetJobs
    path: ../Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
    startLine: 31
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Jobs
  summary: "\nReturns the jobQueue.\n"
  example: []
  syntax:
    content: public static Queue<IJob<EntityDictionary>> GetJobs()
    return:
      type: Queue{Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary}}
      description: ''
    content.vb: Public Shared Function GetJobs As Queue(Of IJob(Of EntityDictionary))
  overload: Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs
  commentId: M:Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs
  id: PurgeJobs
  parent: Hel.Engine.ECS.Jobs.EntityJobScheduler
  langs:
  - csharp
  - vb
  name: PurgeJobs()
  nameWithType: EntityJobScheduler.PurgeJobs()
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: PurgeJobs
    path: ../Hel.Engine/ECS/Jobs/EntityJobScheduler.cs
    startLine: 36
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Jobs
  summary: "\nPurge all jobs from the jobQueue\n"
  example: []
  syntax:
    content: public static void PurgeJobs()
    content.vb: Public Shared Sub PurgeJobs
  overload: Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hel.Engine.ECS.Jobs
  commentId: N:Hel.Engine.ECS.Jobs
  name: Hel.Engine.ECS.Jobs
  nameWithType: Hel.Engine.ECS.Jobs
  fullName: Hel.Engine.ECS.Jobs
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob*
  commentId: Overload:Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob
  name: ScheduleJob
  nameWithType: EntityJobScheduler.ScheduleJob
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler.ScheduleJob
- uid: Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary}
  commentId: T:Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary}
  parent: Hel.Engine.Jobs.Model
  definition: Hel.Engine.Jobs.Model.IJob`1
  name: IJob<EntityDictionary>
  nameWithType: IJob<EntityDictionary>
  fullName: Hel.Engine.Jobs.Model.IJob<Hel.Engine.ECS.Entities.EntityDictionary>
  nameWithType.vb: IJob(Of EntityDictionary)
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of Hel.Engine.ECS.Entities.EntityDictionary)
  name.vb: IJob(Of EntityDictionary)
  spec.csharp:
  - uid: Hel.Engine.Jobs.Model.IJob`1
    name: IJob
    nameWithType: IJob
    fullName: Hel.Engine.Jobs.Model.IJob
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.ECS.Entities.EntityDictionary
    name: EntityDictionary
    nameWithType: EntityDictionary
    fullName: Hel.Engine.ECS.Entities.EntityDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hel.Engine.Jobs.Model.IJob`1
    name: IJob
    nameWithType: IJob
    fullName: Hel.Engine.Jobs.Model.IJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.ECS.Entities.EntityDictionary
    name: EntityDictionary
    nameWithType: EntityDictionary
    fullName: Hel.Engine.ECS.Entities.EntityDictionary
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Jobs.Model.IJob`1
  commentId: T:Hel.Engine.Jobs.Model.IJob`1
  name: IJob<T>
  nameWithType: IJob<T>
  fullName: Hel.Engine.Jobs.Model.IJob<T>
  nameWithType.vb: IJob(Of T)
  fullName.vb: Hel.Engine.Jobs.Model.IJob(Of T)
  name.vb: IJob(Of T)
  spec.csharp:
  - uid: Hel.Engine.Jobs.Model.IJob`1
    name: IJob
    nameWithType: IJob
    fullName: Hel.Engine.Jobs.Model.IJob
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hel.Engine.Jobs.Model.IJob`1
    name: IJob
    nameWithType: IJob
    fullName: Hel.Engine.Jobs.Model.IJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.Jobs.Model
  commentId: N:Hel.Engine.Jobs.Model
  name: Hel.Engine.Jobs.Model
  nameWithType: Hel.Engine.Jobs.Model
  fullName: Hel.Engine.Jobs.Model
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs*
  commentId: Overload:Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs
  name: GetJobs
  nameWithType: EntityJobScheduler.GetJobs
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler.GetJobs
- uid: Queue{Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary}}
  commentId: '!:Queue{Hel.Engine.Jobs.Model.IJob{Hel.Engine.ECS.Entities.EntityDictionary}}'
  definition: Queue`1
  name: Queue<IJob<EntityDictionary>>
  nameWithType: Queue<IJob<EntityDictionary>>
  fullName: Queue<Hel.Engine.Jobs.Model.IJob<Hel.Engine.ECS.Entities.EntityDictionary>>
  nameWithType.vb: Queue(Of IJob(Of EntityDictionary))
  fullName.vb: Queue(Of Hel.Engine.Jobs.Model.IJob(Of Hel.Engine.ECS.Entities.EntityDictionary))
  name.vb: Queue(Of IJob(Of EntityDictionary))
  spec.csharp:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.Jobs.Model.IJob`1
    name: IJob
    nameWithType: IJob
    fullName: Hel.Engine.Jobs.Model.IJob
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hel.Engine.ECS.Entities.EntityDictionary
    name: EntityDictionary
    nameWithType: EntityDictionary
    fullName: Hel.Engine.ECS.Entities.EntityDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.Jobs.Model.IJob`1
    name: IJob
    nameWithType: IJob
    fullName: Hel.Engine.Jobs.Model.IJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hel.Engine.ECS.Entities.EntityDictionary
    name: EntityDictionary
    nameWithType: EntityDictionary
    fullName: Hel.Engine.ECS.Entities.EntityDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Queue`1
  commentId: '!:Queue`1'
  isExternal: true
  name: Queue<>
  nameWithType: Queue<>
  fullName: Queue<>
  nameWithType.vb: Queue(Of )
  fullName.vb: Queue(Of )
  name.vb: Queue(Of )
  spec.csharp:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs*
  commentId: Overload:Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs
  name: PurgeJobs
  nameWithType: EntityJobScheduler.PurgeJobs
  fullName: Hel.Engine.ECS.Jobs.EntityJobScheduler.PurgeJobs
