### YamlMime:ManagedReference
items:
- uid: Hel.Engine.ECS.Components.ComponentDictionary
  commentId: T:Hel.Engine.ECS.Components.ComponentDictionary
  id: ComponentDictionary
  parent: Hel.Engine.ECS.Components
  children:
  - Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  - Hel.Engine.ECS.Components.ComponentDictionary.#ctor(IDictionary{Type,Hel.Engine.ECS.Components.IComponent})
  - Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  - Hel.Engine.ECS.Components.ComponentDictionary.AddByType``1
  - Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType``1
  - Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail``1(``0@)
  - Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  - Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType``1
  - Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  - Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  langs:
  - csharp
  - vb
  name: ComponentDictionary
  nameWithType: ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary
  type: Class
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: ComponentDictionary
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 7
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: 'public class ComponentDictionary : Dictionary<Type, IComponent>'
    content.vb: >-
      Public Class ComponentDictionary
          Inherits Dictionary(Of Type, IComponent)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  id: '#ctor'
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: ComponentDictionary()
  nameWithType: ComponentDictionary.ComponentDictionary()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary()
  type: Constructor
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: .ctor
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 10
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public ComponentDictionary()
    content.vb: Public Sub New
  overload: Hel.Engine.ECS.Components.ComponentDictionary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.#ctor(IDictionary{Type,Hel.Engine.ECS.Components.IComponent})
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.#ctor(IDictionary{Type,Hel.Engine.ECS.Components.IComponent})
  id: '#ctor(IDictionary{Type,Hel.Engine.ECS.Components.IComponent})'
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: ComponentDictionary(IDictionary<Type, IComponent>)
  nameWithType: ComponentDictionary.ComponentDictionary(IDictionary<Type, IComponent>)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary(IDictionary<Type, Hel.Engine.ECS.Components.IComponent>)
  type: Constructor
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: .ctor
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 12
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public ComponentDictionary(IDictionary<Type, IComponent> newComponents)
    parameters:
    - id: newComponents
      type: IDictionary{Type,Hel.Engine.ECS.Components.IComponent}
    content.vb: Public Sub New(newComponents As IDictionary(Of Type, IComponent))
  overload: Hel.Engine.ECS.Components.ComponentDictionary.#ctor*
  nameWithType.vb: ComponentDictionary.ComponentDictionary(IDictionary(Of Type, IComponent))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary(IDictionary(Of Type, Hel.Engine.ECS.Components.IComponent))
  name.vb: ComponentDictionary(IDictionary(Of Type, IComponent))
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType``1
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType``1
  id: GetComponentOfType``1
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: GetComponentOfType<T>()
  nameWithType: ComponentDictionary.GetComponentOfType<T>()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: GetComponentOfType
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 14
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public T GetComponentOfType<T>()
          where T : IComponent
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetComponentOfType(Of T As IComponent) As T
  overload: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType*
  nameWithType.vb: ComponentDictionary.GetComponentOfType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType(Of T)()
  name.vb: GetComponentOfType(Of T)()
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail``1(``0@)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail``1(``0@)
  id: GetComponentOrFail``1(``0@)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: GetComponentOrFail<T>(out T)
  nameWithType: ComponentDictionary.GetComponentOrFail<T>(out T)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail<T>(out T)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: GetComponentOrFail
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 21
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public bool GetComponentOrFail<T>(out T component)
          where T : struct, IComponent
    parameters:
    - id: component
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function GetComponentOrFail(Of T As {Structure, IComponent})(ByRef component As T) As Boolean
  overload: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail*
  nameWithType.vb: ComponentDictionary.GetComponentOrFail(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail(Of T)(ByRef T)
  name.vb: GetComponentOrFail(Of T)(ByRef T)
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull``1(``0@)
  id: GetComponentOrNull``1(``0@)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: GetComponentOrNull<T>(out T)
  nameWithType: ComponentDictionary.GetComponentOrNull<T>(out T)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull<T>(out T)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: GetComponentOrNull
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 30
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public bool GetComponentOrNull<T>(out T component)
          where T : struct, IComponent
    parameters:
    - id: component
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function GetComponentOrNull(Of T As {Structure, IComponent})(ByRef component As T) As Boolean
  overload: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull*
  nameWithType.vb: ComponentDictionary.GetComponentOrNull(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull(Of T)(ByRef T)
  name.vb: GetComponentOrNull(Of T)(ByRef T)
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  id: UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: UpdateComponent(IComponent)
  nameWithType: ComponentDictionary.UpdateComponent(IComponent)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent(Hel.Engine.ECS.Components.IComponent)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: UpdateComponent
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 39
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public void UpdateComponent(IComponent component)
    parameters:
    - id: component
      type: Hel.Engine.ECS.Components.IComponent
    content.vb: Public Sub UpdateComponent(component As IComponent)
  overload: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  id: UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: UpdateComponents(ComponentDictionary)
  nameWithType: ComponentDictionary.UpdateComponents(ComponentDictionary)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents(Hel.Engine.ECS.Components.ComponentDictionary)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: UpdateComponents
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 49
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public void UpdateComponents(ComponentDictionary componentDictionary)
    parameters:
    - id: componentDictionary
      type: Hel.Engine.ECS.Components.ComponentDictionary
    content.vb: Public Sub UpdateComponents(componentDictionary As ComponentDictionary)
  overload: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  id: AddByObject(Hel.Engine.ECS.Components.IComponent)
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: AddByObject(IComponent)
  nameWithType: ComponentDictionary.AddByObject(IComponent)
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject(Hel.Engine.ECS.Components.IComponent)
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: AddByObject
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 55
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: public void AddByObject(IComponent component)
    parameters:
    - id: component
      type: Hel.Engine.ECS.Components.IComponent
    content.vb: Public Sub AddByObject(component As IComponent)
  overload: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByType``1
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.AddByType``1
  id: AddByType``1
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: AddByType<T>()
  nameWithType: ComponentDictionary.AddByType<T>()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: AddByType
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 57
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public void AddByType<T>()
          where T : Type, IComponent, new()
    typeParameters:
    - id: T
    content.vb: Public Sub AddByType(Of T As {Type, IComponent, New})
  overload: Hel.Engine.ECS.Components.ComponentDictionary.AddByType*
  nameWithType.vb: ComponentDictionary.AddByType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.AddByType(Of T)()
  name.vb: AddByType(Of T)()
- uid: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType``1
  commentId: M:Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType``1
  id: RemoveByType``1
  parent: Hel.Engine.ECS.Components.ComponentDictionary
  langs:
  - csharp
  - vb
  name: RemoveByType<T>()
  nameWithType: ComponentDictionary.RemoveByType<T>()
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType<T>()
  type: Method
  source:
    remote:
      path: Hel.Engine/ECS/Components/ComponentDictionary.cs
      branch: f2f109666807b80f42ef1da0cdc0fe395f224fb0
      repo: https://github.com/GriMmzlyTM/Hel
    id: RemoveByType
    path: ../Hel.Engine/ECS/Components/ComponentDictionary.cs
    startLine: 59
  assemblies:
  - Hel.Engine
  namespace: Hel.Engine.ECS.Components
  syntax:
    content: >-
      public void RemoveByType<T>()
          where T : Type, IComponent
    typeParameters:
    - id: T
    content.vb: Public Sub RemoveByType(Of T As {Type, IComponent})
  overload: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType*
  nameWithType.vb: ComponentDictionary.RemoveByType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType(Of T)()
  name.vb: RemoveByType(Of T)()
references:
- uid: Hel.Engine.ECS.Components
  commentId: N:Hel.Engine.ECS.Components
  name: Hel.Engine.ECS.Components
  nameWithType: Hel.Engine.ECS.Components
  fullName: Hel.Engine.ECS.Components
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hel.Engine.ECS.Components.ComponentDictionary.#ctor*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.#ctor
  name: ComponentDictionary
  nameWithType: ComponentDictionary.ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.ComponentDictionary
- uid: IDictionary{Type,Hel.Engine.ECS.Components.IComponent}
  commentId: '!:IDictionary{Type,Hel.Engine.ECS.Components.IComponent}'
  definition: IDictionary`2
  name: IDictionary<Type, IComponent>
  nameWithType: IDictionary<Type, IComponent>
  fullName: IDictionary<Type, Hel.Engine.ECS.Components.IComponent>
  nameWithType.vb: IDictionary(Of Type, IComponent)
  fullName.vb: IDictionary(Of Type, Hel.Engine.ECS.Components.IComponent)
  name.vb: IDictionary(Of Type, IComponent)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hel.Engine.ECS.Components.IComponent
    name: IComponent
    nameWithType: IComponent
    fullName: Hel.Engine.ECS.Components.IComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  commentId: '!:IDictionary`2'
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType
  name: GetComponentOfType
  nameWithType: ComponentDictionary.GetComponentOfType
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOfType
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail
  name: GetComponentOrFail
  nameWithType: ComponentDictionary.GetComponentOrFail
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrFail
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull
  name: GetComponentOrNull
  nameWithType: ComponentDictionary.GetComponentOrNull
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.GetComponentOrNull
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent
  name: UpdateComponent
  nameWithType: ComponentDictionary.UpdateComponent
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponent
- uid: Hel.Engine.ECS.Components.IComponent
  commentId: T:Hel.Engine.ECS.Components.IComponent
  parent: Hel.Engine.ECS.Components
  name: IComponent
  nameWithType: IComponent
  fullName: Hel.Engine.ECS.Components.IComponent
- uid: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents
  name: UpdateComponents
  nameWithType: ComponentDictionary.UpdateComponents
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.UpdateComponents
- uid: Hel.Engine.ECS.Components.ComponentDictionary
  commentId: T:Hel.Engine.ECS.Components.ComponentDictionary
  parent: Hel.Engine.ECS.Components
  name: ComponentDictionary
  nameWithType: ComponentDictionary
  fullName: Hel.Engine.ECS.Components.ComponentDictionary
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.AddByObject
  name: AddByObject
  nameWithType: ComponentDictionary.AddByObject
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByObject
- uid: Hel.Engine.ECS.Components.ComponentDictionary.AddByType*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.AddByType
  name: AddByType
  nameWithType: ComponentDictionary.AddByType
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.AddByType
- uid: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType*
  commentId: Overload:Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType
  name: RemoveByType
  nameWithType: ComponentDictionary.RemoveByType
  fullName: Hel.Engine.ECS.Components.ComponentDictionary.RemoveByType
